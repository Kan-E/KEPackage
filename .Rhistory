sx <- mean(log2(RNAseq3))
sy <- sqrt(fit$sigma)
sx <- mean(log(RNAseq3, 2))
sx <- apply(log(RNAseq3, 2),1,mean)
sy <- sqrt(fit$sigma)
plot(sx, sy, xlab = "log2(TPM)", ylab = "Sqrt( standard deviation )",
pch = 16, cex = 0.25)
l <- lowess(sx, sy, f = span)
l <- lowess(sx, sy)
l <- lowess(sx, sy, span=0.5)
l <- lowess(sx, sy, 0.5)
l <- lowess(sx, sy)
plot(sx, sy, xlab = "log2(TPM)", ylab = "Sqrt( standard deviation )",
pch = 16, cex = 0.25)
Seurat::VariableFeaturePlot
Seurat::VariableFeaturePlot(RNAseq3)
RNAseq2 <- apply(RNAseq,1,sd)/apply(RNAseq,1,mean)
fit = lm(formula = RNAseq2, meanLog2TPM)
fit = lm(formula = RNAseq2 ~ meanLog2TPM)
data10 <- merge(meanLog2TPM, RNAseq2, by=0)
fit = lm(formula = y ~ x, data = data10)
RNAseq2 <- apply(RNAseq3,1,sd)/apply(RNAseq3,1,mean)
meanLog2TPM <- apply(log(RNAseq3,2),1,mean)
data10 <- merge(meanLog2TPM, RNAseq2, by=0)
fit = lm(formula = y ~ x, data = data10)
View(data10)
View(data10)
View(RNAseq3)
RNAseq3 <- apply(RNAseq, 1, max) > 1
RNAseq3 <- filter(RNAseq, apply(RNAseq,1,mean) > 1)
meanLog2TPM <- apply(log(RNAseq3,2),1,mean)
RNAseq2 <- apply(RNAseq3,1,sd)/apply(RNAseq3,1,mean)
data10 <- merge(meanLog2TPM, RNAseq2, by=0)
View(data10)
fit = lm(formula = y ~ x, data = data10)
meanLog2TPM["ABHD11-AS1"]
meanLog2TPM <- apply(log(RNAseq3 + 0.5,2),1,mean)
data10 <- merge(meanLog2TPM, RNAseq2, by=0)
fit = lm(formula = y ~ x, data = data10)
fit
plot( x = data10$x, data10$y)
abline( fit, col = "#2792b3", lwd = 4 )
plot( x = data10$x, data10$y, cex = 1)
abline( fit, col = "#2792b3", lwd = 4 )
plot( x = data10$x, data10$y, pch = 1)
abline( fit, col = "#2792b3", lwd = 4 )
summary(fit)
voom(RNAseq3, plot =T)
plot( x = data10$x, data10$y,pch= 1)
plot( x = data10$x, data10$y,cex = 1)
plot( x = data10$x, data10$y,cex = 0.1)
fit = loess(formula = y ~ x, data = data10)
plot( x = data10$x, data10$y, cex = 0.3)
abline( fit, col = "#2792b3", lwd = 4 )
plot( x = data10$x, data10$y, cex = 0.3)
abline( fit, col = "red", lwd = 4 )
fit
fit = loess(formula = y ~ x, data = data10,degree=1, span = 0.5)
plot( x = data10$x, data10$y, cex = 0.3)
abline( fit, col = "red", lwd = 4 )
plot(fit)
fit$fitted
plot( x = data10$x, data10$y, cex = 0.3)
abline( fit$fitted, col = "red", lwd = 4 )
plot(fit$fitted)
fit = loess(formula = y ~ x, data = data10)
plot(fit$fitted)
plot( x = data10$x, data10$y, cex = 0.3)
abline( fit$fitted, col = "red", lwd = 4 )
data10 %>% mutate(smooth = fit$fitted) %>%
ggplot(aes(x, y)) +
geom_point(size = 3, alpha = .5, color = "grey") +
geom_line(aes(x, smooth), color="red")
library(ggplot2)
data10 %>% mutate(smooth = fit$fitted) %>%
ggplot(aes(x, y)) +
geom_point(size = 3, alpha = .5, color = "grey") +
geom_line(aes(x, smooth), color="red")
data10 %>% mutate(smooth = fit$fitted) %>%
ggplot(aes(x, y)) +
geom_point(size = 1, alpha = .5, color = "grey") +
geom_line(aes(x, smooth), color="red")
data10 %>% mutate(smooth = fit$fitted) %>%
ggplot(aes(x, y)) +
geom_point(size = 1, alpha = .5, color = "black") +
geom_line(aes(x, smooth), color="red") + theme_classic()
RNAseq3 <- filter(RNAseq, apply(RNAseq,1,max) > 1)
meanLog2TPM <- apply(log(RNAseq3,2),1,mean)
RNAseq2 <- apply(RNAseq3,1,sd)/apply(RNAseq3,1,mean)
fit = loess(formula = y ~ x, data = data10)
data10 <- merge(meanLog2TPM, RNAseq2, by=0)
fit = loess(formula = y ~ x, data = data10)
meanLog2TPM <- apply(log(RNAseq3+0.5,2),1,mean)
RNAseq2 <- apply(RNAseq3,1,sd)/apply(RNAseq3,1,mean)
fit = loess(formula = y ~ x, data = data10)
data10 <- merge(meanLog2TPM, RNAseq2, by=0)
fit = loess(formula = y ~ x, data = data10)
RNAseq2 <- apply(RNAseq3,1,sd)/apply(RNAseq3,1,mean)
data10 %>% mutate(smooth = fit$fitted) %>%
ggplot(aes(x, y)) +
geom_point(size = 1, alpha = .5, color = "black") +
geom_line(aes(x, smooth), color="red") + theme_classic()
convertHumanGeneList <- function(x){
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
genesV2 = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = x , mart = human, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
humanx <- unique(genesV2[, 2])
# Print the first 6 genes found to the screen
print(head(humanx))
return(humanx)
}
genes <- convertMouseGeneList(humGenes)
library(biomaRt)
convertHumanGeneList <- function(x){
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
genesV2 = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = x , mart = human, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
humanx <- unique(genesV2[, 2])
# Print the first 6 genes found to the screen
print(head(humanx))
return(humanx)
}
genes <- convertMouseGeneList("/Users/kanetoh/Desktop/gene_set_extraction/gene_set/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM.txt")
convertHumanGeneList <- function(x){
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
genesV2 = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = x , mart = human, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
humanx <- unique(genesV2[, 2])
# Print the first 6 genes found to the screen
print(head(humanx))
return(humanx)
}
genes <- convertHumanGeneList("/Users/kanetoh/Desktop/gene_set_extraction/gene_set/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM.txt")
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
BiocManager::install("biomaRt")
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="uswest.ensembl.org")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
convertHumanGeneList <- function(x){
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
genesV2 = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = x , mart = human, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
humanx <- unique(genesV2[, 2])
# Print the first 6 genes found to the screen
print(head(humanx))
return(humanx)
}
genes <- convertHumanGeneList("/Users/kanetoh/Desktop/gene_set_extraction/gene_set/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM.txt")
human
humax
genesV2
genesV2 = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = x , mart = human, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
genesV2 = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = x , mart = human, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
x = "/Users/kanetoh/Desktop/gene_set_extraction/gene_set/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM.txt"
genesV2 = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = x , mart = human, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
genesV2
genes = c("Zfp286", "Tmx2")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = genes ,mart = mouse, attributesL = c("hgnc_symbol","chromosome_name", "start_position"), martL = human, uniqueRows=T)
genes
genes = c("ZFP286A", "TMX2")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = genes ,mart = mouse, attributesL = c("hgnc_symbol","chromosome_name", "start_position"), martL = human, uniqueRows=T)
genes
genes = c("ZFN286A", "TMX2")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = genes ,mart = mouse, attributesL = c("hgnc_symbol","chromosome_name", "start_position"), martL = human, uniqueRows=T)
genes
y<-as.list(x)
y
y <- read.table(x,skip = 2,row.names = 1)
head(y)
y <- read.table(x,skip = 2)
y
genesV2 = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = y , mart = human, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
genesV2
y <- as.list(y)
y
y <- as.list(y,quote=F)
y
y <- read.table(x,skip = 2)
y <- as.list(y,quote=F)
y
y <- read.table(x,skip = 2,as.is = list, quote = F)
y <- read.table(x,skip = 2,as.is = T, quote = F)
y <- read.table(x,skip = 2,as.is = T)
head(y)
y <- read.table(x,skip = 2,as.is =  = T)
y <- read.table(x,skip = 2,as.is = T)
y <- as.list(y)
y
genes = c("ZFN286A", "TMX2")
genes
genesV2 = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = y , mart = human, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
genesV2
genes = c("ZFN286A", "TMX2")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = y ,mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
genes
genes = c("ZFN286A", "TMX2")
genes = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = y ,mart = human, attributesL = c("hgnc_symbol"), martL = mouse, uniqueRows=T)
genes
genes = c("ZFN286A", "TMX2")
genes = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = genes,mart = human, attributesL = c("hgnc_symbol"), martL = mouse, uniqueRows=T)
genes
genes = c("ZFN286A", "TMX2")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = y ,mart = mouse, attributesL = c("hgnc_symbol","chromosome_name", "start_position"), martL = human, uniqueRows=T)
genes
genes = c("ZFN286A", "TMX2")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = genes ,mart = mouse, attributesL = c("hgnc_symbol","chromosome_name", "start_position"), martL = human, uniqueRows=T)
genes
y <- read.table(x,skip = 2,as.is = T)
y <- as.vector(y)
y
genes = c("ZFN286A", "TMX2")
is.list(genes)
is.vector(genes)
genes <- y$V1
genes
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = genes ,mart = mouse, attributesL = c("hgnc_symbol","chromosome_name", "start_position"), martL = human, uniqueRows=T)
genes
y <- read.table("/Users/kanetoh/Desktop/gene_set_extraction/gene_set/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM.txt",skip = 2)
head(y)
genes <- read.table("/Users/kanetoh/Desktop/gene_set_extraction/gene_set/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM.txt",skip = 2)
head(genes)
genes <- read.table("human gene set.txt",skip = 2)
genes <- genes$V1
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol",
values = genes ,mart = mouse,
attributesL = c("hgnc_symbol"),
martL = human, uniqueRows=T)
genes
GeneSetConversion <- function(Gene_set) {
}
GeneSetConversion("/Users/kanetoh/Desktop/gene_set_extraction/gene_set")
GeneSetConversion <- function(Gene_set) {
dir_name <- Gene_set
dir_name_1 <- paste(dir_name, "_convert", sep = "")
dir.create(dir_name_1, showWarnings = F)
gene_set_files <- list.files(path = Gene_set,
pattern = "*.txt")
gene_set_files <- gsub(".txt", "", gene_set_files)
for (name in gene_set_files) {
data.file <- paste(name, ".txt", sep = "")
print(data.file)
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
genes <- read.table(name, skip = 2)
genes <- genes$V1
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol",
values = genes ,mart = mouse,
attributesL = c("hgnc_symbol"),
martL = human, uniqueRows=T)
write.table(genes, file = name, row.names = F, col.names = T, quote = F)
}
}
GeneSetConversion("/Users/kanetoh/Desktop/gene_set_extraction/gene_set")
GeneSetConversion <- function(Gene_set) {
dir_name <- Gene_set
dir_name_1 <- paste(dir_name, "_convert", sep = "")
dir.create(dir_name_1, showWarnings = F)
gene_set_files <- list.files(path = Gene_set,
pattern = "*.txt")
gene_set_files <- gsub(".txt", "", gene_set_files)
for (name in gene_set_files) {
data.file <- paste(name, ".txt", sep = "")
print(data.file)
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
genes <- read.table(name, skip = 2)
genes <- genes$V1
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol",
values = genes ,mart = mouse,
attributesL = c("hgnc_symbol"),
martL = human, uniqueRows=T)
gene.file <- paste(name, ".txt", sep = "")
gene.file <- paste(paste(dir_name_1, "/", sep = ""), gene.file, sep = "")
write.table(genes, file = gene.file, row.names = F, col.names = T, quote = F)
}
}
GeneSetConversion("/Users/kanetoh/Desktop/gene_set_extraction/gene_set")
GeneSetConversion <- function(Gene_set) {
dir_name <- Gene_set
dir_name_1 <- paste(dir_name, "_convert", sep = "")
dir.create(dir_name_1, showWarnings = F)
gene_set_files <- list.files(path = Gene_set,
pattern = "*.txt")
gene_set_files <- gsub(".txt", "", gene_set_files)
for (name in gene_set_files) {
data.file <- paste(name, ".txt", sep = "")
print(data.file)
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
genes <- read.table(data.file, skip = 2)
genes <- genes$V1
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol",
values = genes ,mart = mouse,
attributesL = c("hgnc_symbol"),
martL = human, uniqueRows=T)
gene.file <- paste(paste(dir_name_1, "/", sep = ""), data.file, sep = "")
write.table(genes, file = gene.file, row.names = F, col.names = T, quote = F)
}
}
GeneSetConversion("/Users/kanetoh/Desktop/gene_set_extraction/gene_set")
GeneSetConversion("/Users/kanetoh/Desktop/gene_set_extraction/gene_set")
GeneSetConversion <- function(Gene_set) {
dir_name <- Gene_set
dir_name_1 <- paste(dir_name, "_convert", sep = "")
dir.create(dir_name_1, showWarnings = F)
gene_set_files <- list.files(path = Gene_set,
pattern = "*.txt")
gene_set_files <- gsub(".txt", "", gene_set_files)
gene_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
gene_set_dir <- gsub(gene_set_files[1], "", gene_files_full[1])
gene_files_full <- gsub(".txt", "", gene_files_full)
for (name in gene_files_full) {
data.file <- paste(name, ".txt", sep = "")
print(data.file)
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
genes <- read.table(data.file, skip = 2)
genes <- genes$V1
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol",
values = genes ,mart = mouse,
attributesL = c("hgnc_symbol"),
martL = human, uniqueRows=T)
gene.file <- gsub(gene_set_dir, "", data.file)
gene.file <- paste(paste(dir_name_1, "/", sep = ""), gene.file, sep = "")
write.table(genes, file = gene.file, row.names = F, col.names = T, quote = F)
}
}
GeneSetConversion("/Users/kanetoh/Desktop/gene_set_extraction/gene_set")
GeneSetConversion <- function(Gene_set) {
dir_name <- Gene_set
dir_name_1 <- paste(dir_name, "_convert", sep = "")
dir.create(dir_name_1, showWarnings = F)
gene_set_files <- list.files(path = Gene_set,
pattern = "*.txt")
gene_set_files <- gsub(".txt", "", gene_set_files)
gene_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
gene_set_dir <- gsub(gene_set_files[1], "", gene_files_full[1])
gene_files_full <- gsub(".txt", "", gene_files_full)
for (name in gene_files_full) {
data.file <- paste(name, ".txt", sep = "")
print(data.file)
genes <- read.table(data.file, skip = 2)
genes <- genes$V1
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol",
values = genes ,mart = mouse,
attributesL = c("hgnc_symbol"),
martL = human, uniqueRows=T)
gene.file <- gsub(gene_set_dir, "", data.file)
gene.file <- paste(paste(dir_name_1, "/", sep = ""), gene.file, sep = "")
write.table(genes, file = gene.file, row.names = F, col.names = T, quote = F)
}
}
GeneSetConversion("/Users/kanetoh/Desktop/gene_set_extraction/gene_set")
Gene_set = "/Users/kanetoh/Desktop/gene_set_extraction/gene_set"
dir_name <- Gene_set
dir_name_1 <- paste(dir_name, "_convert", sep = "")
dir.create(dir_name_1, showWarnings = F)
gene_set_files <- list.files(path = Gene_set,
pattern = "*.txt")
gene_set_files <- gsub(".txt", "", gene_set_files)
gene_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
gene_set_dir <- gsub(gene_set_files[1], "", gene_files_full[1])
gene_files_full <- gsub(".txt", "", gene_files_full)
gene_files_full
gene_set_dir <- gsub(gene_set_files[1], "", gene_files_full[1])
gene_set_dir
name = "/Users/kanetoh/Desktop/gene_set_extraction/gene_set/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM"
data.file <- paste(name, ".txt", sep = "")
print(data.file)
genes <- read.table(data.file, skip = 2)
genes <- genes$V1
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol",
values = genes ,mart = mouse,
attributesL = c("hgnc_symbol"),
martL = human, uniqueRows=T)
gene.file <- gsub(gene_set_dir, "", data.file)
gene.file
gene.file <- paste(paste(dir_name_1, "/", sep = ""), gene.file, sep = "")
gene.file
write.table(genes, file = gene.file, row.names = F, col.names = T, quote = F)
GeneSetConversion <- function(Gene_set) {
dir_name <- Gene_set
dir_name_1 <- paste(dir_name, "_convert", sep = "")
dir.create(dir_name_1, showWarnings = F)
gene_set_files <- list.files(path = Gene_set,
pattern = "*.txt")
gene_set_files <- gsub(".txt", "", gene_set_files)
gene_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
gene_set_dir <- gsub(gene_set_files[1], "", gene_files_full[1])
gene_files_full <- gsub(".txt", "", gene_files_full)
for (name in gene_files_full) {
data.file <- paste(name, ".txt", sep = "")
print(data.file)
genes <- read.table(data.file, skip = 2)
genes <- genes$V1
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol",
values = genes ,mart = mouse,
attributesL = c("hgnc_symbol"),
martL = human, uniqueRows=T)
gene.file <- gsub(gene_set_dir, "", data.file)
gene.file <- paste(paste(dir_name_1, "/", sep = ""), gene.file, sep = "")
write.table(genes, file = gene.file, row.names = F, col.names = T, quote = F)
}
}
GeneSetConversion(Gene_set = "/Users/kanetoh/Desktop/gene_set_extraction/gene_set")
GeneSetConversion <- function(Gene_set) {
dir_name <- Gene_set
dir_name_1 <- paste(dir_name, "_convert", sep = "")
dir.create(dir_name_1, showWarnings = F)
gene_set_files <- list.files(path = Gene_set,
pattern = "*.txt")
gene_set_files <- gsub(".txt", "", gene_set_files)
gene_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
gene_set_dir <- gsub(gene_set_files[1], "", gene_files_full[1])
gene_files_full <- gsub(".txt", "", gene_files_full)
for (name in gene_files_full) {
data.file <- paste(name, ".txt", sep = "")
print(data.file)
genes <- read.table(data.file, skip = 2)
genes <- genes$V1
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol",
values = genes ,mart = mouse,
attributesL = c("hgnc_symbol"),
martL = human, uniqueRows=T)
gene.file <- gsub(gene_set_dir, "", data.file)
gene.file <- paste(paste(dir_name_1, "/", sep = ""), gene.file, sep = "")
write.table(genes, file = gene.file, sep="\t", quote=F, row.names = F)
}
}
GeneSetConversion(Gene_set = "/Users/kanetoh/Desktop/gene_set_extraction/gene_set")
data.file
gene.file <- gsub(gene_set_dir, "", data.file)
gene.file
gene.file <- paste(paste(dir_name_1, "/", sep = ""), gene.file, sep = "")
write.table(genes, file = gene.file, sep="\t", quote=F, row.names = F)
GeneSetConversion <- function(Gene_set) {
dir_name <- Gene_set
dir_name_1 <- paste(dir_name, "_convert", sep = "")
dir.create(dir_name_1, showWarnings = F)
gene_set_files <- list.files(path = Gene_set,
pattern = "*.txt")
gene_set_files <- gsub(".txt", "", gene_set_files)
gene_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
gene_set_dir <- gsub(gene_set_files[1], "", gene_files_full[1])
gene_files_full <- gsub(".txt", "", gene_files_full)
for (name in gene_files_full) {
data.file <- paste(name, ".txt", sep = "")
print(data.file)
genes <- read.table(data.file, skip = 2)
genes <- genes$V1
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol",
values = genes ,mart = mouse,
attributesL = c("hgnc_symbol"),
martL = human, uniqueRows=T)
gene.file <- gsub(gene_set_dir, "", data.file)
gene.file <- paste(paste(dir_name_1, "/_C_", sep = ""), gene.file, sep = "")
write.table(genes, file = gene.file, sep="\t", quote=F, row.names = F)
}
}
GeneSetConversion(Gene_set = "/Users/kanetoh/Desktop/gene_set_extraction/gene_set")
GeneSetConversion <- function(Gene_set) {
dir_name <- Gene_set
dir_name_1 <- paste(dir_name, "_convert", sep = "")
dir.create(dir_name_1, showWarnings = F)
gene_set_files <- list.files(path = Gene_set,
pattern = "*.txt")
gene_set_files <- gsub(".txt", "", gene_set_files)
gene_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
gene_set_dir <- gsub(gene_set_files[1], "", gene_files_full[1])
gene_files_full <- gsub(".txt", "", gene_files_full)
for (name in gene_files_full) {
data.file <- paste(name, ".txt", sep = "")
print(data.file)
genes <- read.table(data.file, skip = 2)
genes <- genes$V1
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl",host="asia.ensembl.org")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl",host="asia.ensembl.org")
genes = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol",
values = genes ,mart = mouse,
attributesL = c("hgnc_symbol"),
martL = human, uniqueRows=T)
gene.file <- gsub(gene_set_dir, "", data.file)
gene.file <- paste(paste(dir_name_1, "/C_", sep = ""), gene.file, sep = "")
write.table(genes, file = gene.file, sep="\t", quote=F, row.names = F)
}
}
GeneSetConversion(Gene_set = "/Users/kanetoh/Desktop/gene_set_extraction/gene_set")
