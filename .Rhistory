multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 2, basemean = 10)
warnings()
setwd("~/Downloads/RNA-seq analysis/PQS_siACLY_integrated_analysis")
View(out)
p1
pdf("kegg_PQSdown_Senup",height = 4,width = 4)
p1
dev.off()
pdf("kegg_PQSdown_Senup",height = 3.5,width = 3.5)
p1
p1
dev.off()
pdf("kegg_PQSdown_Senup",height = 3.5,width = 3.5)
dev.off()
pdf("kegg_PQSdown_Senup.pdf",height = 3.5,width = 3.5)
p1
dev.off()
pdf("kegg_PQSdown_Senup.pdf",height = 3.5,width = 4)
p1
dev.off()
pdf("kegg_PQSdown_Senup.pdf",height = 3.2,width = 4)
p1
dev.off()
pdf("kegg_PQSdown_Senup.pdf",height = 3,width = 4)
p1
dev.off()
data<-read.table("PQS_TPM.txt",header = T,row.names = 1)
data2<-read.table("SsiACLY_TPM.txt",header = T,row.names = 1)
data3<-merge(data,data2,by=0)
data.z <- genescale(data3, axis = 1, method = "Z")
data4<-data3[,-1]
data.z <- genescale(data4, axis = 1, method = "Z")
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
cluster_row_slices = F,
show_row_names = F)
ht
head(data3)
head(data.z)
data.z<-na.omit(data.z)
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
cluster_row_slices = F,
show_row_names = F)
ht
write.table(data3,file = "All_TPM.txt",sep="\t",quote = F, row.names = F)
colnames(data3)<-c("Row.names","Pro_1","Pro_2","Pro_3","Qui_1","Qui_2","Qui_3","Sen_1","Sen_2","Sen_3","Sen_4","Sen_5","Sen_6","Sen-siACLYst1_1","Sen-siACLYst1_2","Sen-siACLYst1_3","Sen-siACLYst2_1","Sen-siACLYst2_2","Sen-siACLYst2_3")
write.table(data3,file = "All_TPM.txt",sep="\t",quote = F, row.names = F)
Omics_overview("All_TPM.txt")
Count_matrix="All_TPM.txt"
data <- read.table(Count_matrix, header = T, row.names = 1)
pca <- prcomp(data, scale. = T)
plotly
install.packages("plotly")
plotly
library(plotly)
pca$rotation <- as.data.frame(pca$rotation)
label<- colnames(data)
label<- gsub("\\_.+$", "", label)
plot_ly(x=pca$rotation[,1], y=pca$rotation[,2], z=pca$rotation[,3], type="scatter3d",mode="markers", color = label)
data <- read.table(Count_matrix, header = T, row.names = 1)
pca <- prcomp(data, scale. = T)
label<- colnames(data)
label<- gsub("\\_.+$", "", label)
lab_x <- paste(summary(pca)$importance[2,1]*100,
"% of variance)", sep = "")
lab_x <- paste("PC1 (", lab_x, sep = "")
lab_y <- paste(summary(pca)$importance[2,2]*100,
"% of variance)", sep = "")
lab_y <- paste("PC2 (", lab_y, sep = "")
pca$rotation <- as.data.frame(pca$rotation)
g1 <- ggplot(pca$rotation,aes(x=pca$rotation[,1],
y=pca$rotation[,2],
col=label, label = label)) +
geom_point()+
theme(panel.background =element_rect(fill=NA,color=NA),
panel.border = element_rect(fill = NA, size=0.5)) +
xlab(lab_x) + ylab(lab_y) + geom_text_repel()  +
theme(legend.position="none")
library(ggrepel)
g1 <- ggplot(pca$rotation,aes(x=pca$rotation[,1],
y=pca$rotation[,2],
col=label, label = label)) +
geom_point()+
theme(panel.background =element_rect(fill=NA,color=NA),
panel.border = element_rect(fill = NA, size=0.5)) +
xlab(lab_x) + ylab(lab_y) + geom_text_repel()  +
theme(legend.position="none")
pca_name <- gsub("\\..+$", "", Count_matrix)
pca_name <- paste(pca_name, "_pca.pdf", sep = "")
pdf(pca_name, height = 2, width = 2)
print(g1)
dev.off()
pdf(pca_name, height = 2.5, width = 2.75)
print(g1)
dev.off()
pdf(pca_name, height = 2.2, width = 2.5)
print(g1)
dev.off()
pdf(pca_name, height = 2, width = 2.4)
print(g1)
dev.off()
pdf(pca_name, height = 1.8, width = 2.1)
print(g1)
dev.off()
setwd("/Volumes/SONY_16GU")
DEG_overview(Count_matrix = "Dex_Gas_GeneMat_TPM.txt",DEG_result = "All_gene.txt",Type = "DEseq2",Species = "mouse",Cond_1 = 3,Cond_2 = 5)
Count_matrix = "Dex_Gas_GeneMat_TPM.txt"
DEG_result = "All_gene.txt"
Type = "DEseq2"
Species = "mouse"
Cond_1 = 3
Cond_2 = 5
fc=2
fdr=0.05
data <- read.table(DEG_result,header = T, row.names = 1)
count <- read.table(Count_matrix,header=T, row.names = 1)
data <- merge(data,count, by=0)
dir_name <- gsub(".txt", "", Count_matrix)
dir_name <- paste(dir_name, paste("_fc", fc, sep = ""), sep = "")
dir_name <- paste(dir_name, paste("_fdr", fdr, sep = ""), sep = "")
dir.create(dir_name, showWarnings = F)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
library(org.Mm.eg.db)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
if (Type == "EBseq"){
data$padj <- data$PPEE
}
if (Type == "EBseq"){
data$log2FoldChange <- -1 * log2(data$PostFC)
}
my.symbols <- data$Row.names
gene_IDs<-AnnotationDbi::select(org,keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL", "UNIPROT"))
colnames(gene_IDs) <- c("Row.names","ENTREZID","UNIPROT")
data <- merge(data, gene_IDs, by="Row.names")
data <- data %>% distinct(Row.names, .keep_all = T)
if (Type == "EBseq"){
baseMean <- (data$C1Mean + data$C2Mean)*(1/2)
data <- cbind(data, baseMean)
}
##MA-plot
m1 <- as.grob(ggmaplot(data, fdr = fdr, fc = fc, size = 0.4,
palette = c("#B31B21", "#1465AC", "darkgray"),
genenames = as.vector(data$Row.names),
legend = "top", top = 20,
font.label = c("bold", 6),font.legend = "bold",
font.main = "bold",
ggtheme = ggplot2::theme_minimal(),
select.top.method = "fc"))
library(ggmaplot)
library(ggpubr)
##MA-plot
m1 <- as.grob(ggmaplot(data, fdr = fdr, fc = fc, size = 0.4,
palette = c("#B31B21", "#1465AC", "darkgray"),
genenames = as.vector(data$Row.names),
legend = "top", top = 20,
font.label = c("bold", 6),font.legend = "bold",
font.main = "bold",
ggtheme = ggplot2::theme_minimal(),
select.top.method = "fc"))
library(ggplotify)
data2 <- data[abs(data$log2FoldChange) > log(fc, 2),]
##heatmap
data.z <- genescale(data3[,8:(7 + Cond_1 + Cond_2)], axis=1, method="Z")
ht <- as.grob(Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
show_row_names = F, show_row_dend = T))
head(data)
head(data3[,8:(7 + Cond_1 + Cond_2)])
data2$group <- "upregulated"
data2$group[data2$log2FoldChange < 0] <- "downregulated"
data3 <- data2[abs(data2$padj) < fdr,]
nrow(data2)
##heatmap
data.z <- genescale(data3[,8:(7 + Cond_1 + Cond_2)], axis=1, method="Z")
ht <- as.grob(Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
show_row_names = F, show_row_dend = T))
head(data3[,8:(7 + Cond_1 + Cond_2)])
head(data2)
data3 <- data2[abs(data2$padj) < fdr,]
head(data3)
head(data2)
data3 <- data2[is.na(data2$padj)]
data3 <- dplyr::filter(data2, is.na(padj))
data3 <- data2[abs(data2$padj) < fdr,]
##heatmap
data.z <- genescale(data3[,8:(7 + Cond_1 + Cond_2)], axis=1, method="Z")
head(data3)
data3 <- dplyr::filter(data2, is.na(padj))
head(data3)
head(data2)
abs(data2$padj)
fdr
data3 <- data2[abs(data2$padj) < fdr,]
head(data3)
data3 <- data2[data2$padj != "NA",]
head(data3)
head(data2)
head(data)
data2 <- data[abs(data$log2FoldChange) > log(fc, 2),]
head(data2)
is.data.frame(data)
head(data$log2FoldChange)
data2 <- dplyr::filter(data, abs(data$log2FoldChange) > log(fc, 2))
head(ddata)
head(data2)
data2$group <- "upregulated"
data2$group[data2$log2FoldChange < 0] <- "downregulated"
data3 <- data2[abs(data2$padj) < fdr,]
head(data3)
head(data2)
data3 <- dplyr::filter(data2, abs(data2$padj) < fdr)
head(data3)
##heatmap
data.z <- genescale(data3[,8:(7 + Cond_1 + Cond_2)], axis=1, method="Z")
ht <- as.grob(Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
show_row_names = F, show_row_dend = T))
head(data.z)
DEG_overview(Count_matrix = "Dex_Gas_GeneMat_TPM.txt",DEG_result = "All_gene.txt",Type = "DEseq2",Species = "mouse",Cond_1 = 3,Cond_2 = 5)
##MA-plot
m1 <- as.grob(ggmaplot(data, fdr = fdr, fc = fc, size = 0.4,
palette = c("#B31B21", "#1465AC", "darkgray"),
genenames = as.vector(data$Row.names),
legend = "top", top = 20,
font.label = c("bold", 6),font.legend = "bold",
font.main = "bold",
ggtheme = ggplot2::theme_minimal(),
select.top.method = "fc"))
data2 <- dplyr::filter(data, abs(data$log2FoldChange) > log(fc, 2))
if(nrow(data2) != 0){
data2$group <- "upregulated"
data2$group[data2$log2FoldChange < 0] <- "downregulated"
data3 <- dplyr::filter(data2, abs(data2$padj) < fdr)
##heatmap
data.z <- genescale(data3[,8:(7 + Cond_1 + Cond_2)], axis=1, method="Z")
ht <- as.grob(Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
show_row_names = F, show_row_dend = T))
ma_name <- paste(paste(dir_name, "/", sep = ""),
"ma-heatmap.pdf", sep = "")
pdf(ma_name, width = 7, height = 3.5)
print(plot_grid(m1, ht, rel_widths = c(2, 1)))
dev.off()
#dotplot
universe <- AnnotationDbi::select(org,keys = rownames(count),
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL", "UNIPROT"))
formula_res <- try(compareCluster(ENTREZID~group, data=data3,
fun="enrichKEGG", organism=org_code,
universe = universe), silent = T)
if (class(formula_res) == "try-error") {
formula_res <- NA
p1 <- NULL
} else{
if ((length(as.data.frame(formula_res)) == 0) ||
is.na(unique(as.data.frame(formula_res)$qvalue))) {
p1 <- NULL
} else{
p1 <- as.grob(dotplot(formula_res, color ="qvalue", font.size = 9))
keggenrich_name <- paste(paste(dir_name, "/", sep = ""),
"kegg_enrich.txt", sep = "")
write.table(as.data.frame(formula_res), file = keggenrich_name, row.names = F, col.names = T, sep = "\t", quote = F)
}
}
##cnetplot
upgene <- data3[data3$log2FoldChange > log(fc, 2),]
geneList_up <- upgene$log2FoldChange
names(geneList_up) = as.character(upgene$ENTREZID)
kk1 <- enrichKEGG(upgene$ENTREZID, organism =org_code,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
if(is.null(kk1)){
cnet1 <- NULL
} else cnet1 <- setReadable(kk1, org, 'ENTREZID')
if (length(cnet1$ID) == 0) {
p2 <- NULL
} else{
p2 <- as.grob(cnetplot(cnet1, foldChange=geneList_up,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
downgene <- data3[data3$log2FoldChange < log(1/fc, 2),]
geneList_down <- downgene$log2FoldChange
names(geneList_down) = as.character(downgene$ENTREZID)
kk2 <- enrichKEGG(downgene$ENTREZID, organism =org_code,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
if(is.null(kk2)){
cnet2 <- NULL
} else cnet2 <- setReadable(kk2, org, 'ENTREZID')
if (length(cnet2$ID) == 0) {
p3 <- NULL
} else{
p3 <- as.grob(cnetplot(cnet2, foldChange=geneList_down,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
##GSEA plot
data_uniprot <- na.omit(data)
data_uniprot <- data_uniprot %>% distinct(UNIPROT, .keep_all = T)
geneList <- data_uniprot$log2FoldChange
names(geneList) = as.character(data_uniprot$UNIPROT)
geneList <- sort(geneList, decreasing = TRUE)
kk2 <- gseKEGG(geneList = geneList, pvalueCutoff = 0.05,
organism = org_code, keyType = "uniprot",
exponent = 1, eps = 0, pAdjustMethod = "none",
minGSSize = 50, maxGSSize = 500, by = "fgsea",
use_internal_data = FALSE)
if (length(kk2$ID) == 0) {
p4 <- NULL
} else{
p4 <- as.grob(gseaplot2(kk2, 1:6, pvalue_table = F))
gsekegg_name <- paste(paste(dir_name, "/", sep = ""),
"gsekegg.txt", sep = "")
write.table(as.data.frame(kk2), file = gsekegg_name, row.names = F, col.names = T, sep = "\t", quote = F)
}
kegg_name <- paste(paste(dir_name, "/", sep = ""),
"kegg.pdf", sep = "")
pdf(kegg_name, width = 14, height = 14.0)
print(plot_grid(p1, p4, p2, p3, nrow = 2))
dev.off()
##GOenrichment
##enrichment
formula_res_go <- try(compareCluster(ENTREZID~group,
data=data3,fun="enrichGO", OrgDb=org), silent =T)
if (class(formula_res_go) == "try-error") {
formula_res_go <- NA
g1 <- NULL
} else {
if ((length(as.data.frame(formula_res_go)) == 0) ||
is.na(unique(as.data.frame(formula_res_go)$qvalue))) {
g1 <- NULL
} else{
g1 <- as.grob(dotplot(formula_res_go, color ="qvalue", font.size = 9))
goenrich_name <- paste(paste(dir_name, "/", sep = ""),
"go_enrich.txt", sep = "")
write.table(as.data.frame(formula_res_go), file = goenrich_name,
row.names = F, col.names = T, sep = "\t", quote = F)
}
}
##cnetplot
go1 <- enrichGO(upgene$ENTREZID, OrgDb = org,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
if(is.null(go1)){
cnet_go1 <- NULL
} else cnet_go1 <- setReadable(go1, org, 'ENTREZID')
if (length(cnet_go1$ID) == 0) {
g2 <- NULL
} else{
g2 <- as.grob(cnetplot(cnet_go1, foldChange=geneList_up,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
go2 <- enrichGO(downgene$ENTREZID, OrgDb = org,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
if(is.null(go2)){
cnet_go2 <- NULL
} else cnet_go2 <- setReadable(go2, org, 'ENTREZID')
if (length(cnet_go2$ID) == 0) {
g3 <- NULL
} else{
g3 <- as.grob(cnetplot(cnet_go2, foldChange=geneList_down,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
##GSEA plot
data <- na.omit(data)
geneList <- data$log2FoldChange
names(geneList) = as.character(data$ENTREZID)
geneList <- sort(geneList, decreasing = TRUE)
go3 <- gseGO(geneList = geneList, pvalueCutoff = 0.05,
OrgDb = org, exponent = 1, eps = 0,
pAdjustMethod = "none", minGSSize = 50,
maxGSSize = 500, by = "fgsea")
if (length(go3$ID) == 0) {
g4 <- NULL
} else{
g4 <- as.grob(gseaplot2(kk2, 1:6, pvalue_table = F))
gsego_name <- paste(paste(dir_name, "/", sep = ""),
"gseGO.txt", sep = "")
write.table(as.data.frame(kk2), file = gsego_name, row.names = F, col.names = T, sep = "\t", quote = F)
}
go_name <- paste(paste(dir_name, "/", sep = ""),
"GO.pdf", sep = "")
pdf(go_name, width = 14, height = 14.0)
print(plot_grid(g1, g4, g2, g3, nrow = 2))
dev.off()
#FC上位50下位50をboxplot
data4 <- data3[sort(data3$log2FoldChange, decreasing = T, index=T)$ix,]
up_all <- dplyr::filter(data4, log2FoldChange > 0)
up50 <- up_all[1:50,8:(7 + Cond_1 + Cond_2)]
collist <- gsub("\\_.+$", "", colnames(up50))
collist <- unique(collist[-1])
up50$Row.names <- up_all[1:50,]$Row.names
up50 <- up50 %>% gather(key=sample, value=value,-Row.names)
up50$sample <- gsub("\\_.+$", "", up50$sample)
up50$Row.names <- as.factor(up50$Row.names)
up50$sample <- factor(up50$sample,levels=collist,ordered=TRUE)
up50$value <- as.numeric(up50$value)
data4 <- data3[sort(data3$log2FoldChange, decreasing = F, index=T)$ix,]
down_all <- dplyr::filter(data4, log2FoldChange < 0)
down50 <- down_all[1:50,8:(7 + Cond_1 + Cond_2)]
down50$Row.names <- down_all[1:50,]$Row.names
down50 <- down50 %>% gather(key=sample, value=value,-Row.names)
down50$sample <- gsub("\\_.+$", "", down50$sample)
down50$Row.names <- as.factor(down50$Row.names)
down50$sample <- factor(down50$sample,levels=collist,ordered=TRUE)
down50$value <- as.numeric(down50$value)
data5 <- data4[,8:(7 + Cond_1 + Cond_2)]
rownames(data5) <- data4$Row.names
deg_name <- paste(paste(dir_name, "/", sep = ""),
"DEG_count.txt", sep = "")
write.table(data5, file = deg_name, row.names = T, col.names = T, sep = "\t", quote = F)
degtop_name <- paste(paste(dir_name, "/", sep = ""),
"top_DEG.pdf", sep = "")
pdf(degtop_name,height = 10, width = 10)
plot(ggpubr::ggboxplot(up50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)) +
scale_fill_manual(values=c("gray", "#ff8082")))
plot(ggpubr::ggboxplot(down50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)) +
scale_fill_manual(values=c("gray", "#ff8082")))
dev.off()
} else{
ma_name <- paste(paste(dir_name, "/", sep = ""),
"maplot.pdf", sep = "")
pdf(ma_name, width = 4.5, height = 3.5)
print(plot_grid(m1))
dev.off()
}
library(clusterProfiler)
library(cowplot)
library(ggplot2)
library(enrichplot)
library(DOSE)
##heatmap
data.z <- genescale(data3[,8:(7 + Cond_1 + Cond_2)], axis=1, method="Z")
ht <- as.grob(Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
show_row_names = F, show_row_dend = T))
ma_name <- paste(paste(dir_name, "/", sep = ""),
"ma-heatmap.pdf", sep = "")
pdf(ma_name, width = 7, height = 3.5)
print(plot_grid(m1, ht, rel_widths = c(2, 1)))
dev.off()
#dotplot
universe <- AnnotationDbi::select(org,keys = rownames(count),
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL", "UNIPROT"))
setwd("/Volumes/SONY_16GU")
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "Dex_Gas_GeneMat_TPM.txt",DEG_result = "All_gene.txt",Type = "DEseq2",Species = "mouse",Cond_1 = 3,Cond_2 = 5)
DEG_overview(Count_matrix = "Dex_Gas_GeneMat_TPM.txt",DEG_result = "All_gene.txt",Type = "DEseq2",Species = "mouse",Cond_1 = 3,Cond_2 = 5,fc=1.5, fdr=0.05)
setwd("~/Desktop/デモデータ/acly")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fc=2, fdr=0.05)
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fc=2, fdr=0.05)
setwd("~/Desktop/デモデータ/acly")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fc=2, fdr=0.05)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fc=2, fdr=0.05)
setwd("/Volumes/SONY_16GU")
DEG_overview(Count_matrix = "Dex_Gas_GeneMat_TPM.txt",DEG_result = "All_gene.txt",Type = "DEseq2",Species = "mouse",Cond_1 = 3,Cond_2 = 5,fc=1, fdr=0.05)
setwd("~/Desktop/デモデータ/acly")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fc=10, fdr=0.05)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fc=10, fdr=0.05)
setwd("/Volumes/SONY_16GU")
DEG_overview(Count_matrix = "Dex_Gas_GeneMat_TPM.txt",DEG_result = "All_gene.txt",Type = "DEseq2",Species = "mouse",Cond_1 = 3,Cond_2 = 5,fc=1, fdr=0.05)
setwd("/Volumes/SONY_16GU")
DEG_overview(Count_matrix = "Dex_Gas_GeneMat_TPM.txt",DEG_result = "All_gene.txt",Type = "DEseq2",Species = "mouse",Cond_1 = 3,Cond_2 = 5,fc=1, fdr=0.05)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "Dex_Gas_GeneMat_TPM.txt",DEG_result = "All_gene.txt",Type = "DEseq2",Species = "mouse",Cond_1 = 3,Cond_2 = 5,fc=1, fdr=0.05)
devtools::install_github("Kan-E/rnaseqviewer")
library(rnaseqviewer)
setwd("/Volumes/SONY_16GU")
DEG_overview(Count_matrix = "Dex_Gas_GeneMat_TPM.txt",DEG_result = "All_gene.txt",Type = "DEseq2",Species = "mouse",Cond_1 = 3,Cond_2 = 5,fc=1, fdr=0.05)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "Dex_Gas_GeneMat_TPM.txt",DEG_result = "All_gene.txt",Type = "DEseq2",Species = "mouse",Cond_1 = 3,Cond_2 = 5,fc=1, fdr=0.05)
setwd("~/Desktop/デモデータ/acly")
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fc=10, fdr=0.05)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fc=10, fdr=0.05)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fc=10, fdr=0.05)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fc=10, fdr=0.05)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fc=10, fdr=0.05)
