keggenrich_name <- gsub("\\..+$", "", Count_matrix)
keggenrich_name <- paste(keggenrich_name, "_kegg_enrich.csv", sep = "")
write.table(as.data.frame(formula_res), file = keggenrich_name, row.names = F, col.names = T, sep = ",", quote = F)
##cnetplot
upgene <- data3[data3$log2FoldChange > 1,]
geneList_up <- upgene$log2FoldChange
names(geneList_up) = as.character(upgene$ENTREZID)
kk1 <- enrichKEGG(upgene$ENTREZID, organism =org_code,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
cnet1 <- setReadable(kk1, org, 'ENTREZID')
p2 <- as.grob(cnetplot(cnet1, foldChange=geneList_up,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
downgene <- data3[data3$log2FoldChange < 1,]
geneList_down <- downgene$log2FoldChange
names(geneList_down) = as.character(downgene$ENTREZID)
kk2 <- enrichKEGG(downgene$ENTREZID, organism =org_code,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
cnet2 <- setReadable(kk2, org, 'ENTREZID')
p3 <- as.grob(cnetplot(cnet2, foldChange=geneList_down,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
kk1
kk2
cnet2
cnet1
summary(cnet2)
summary(cnet1)
cnet1$ID
cnet2$ID
row_number(cnet1$ID)
row_number(cnet2$ID)
length(cnet2$ID)
length(cnet1$ID)
p3 <- "space"
p3 <- NULL
##GSEA plot
data <- na.omit(data)
geneList <- data$log2FoldChange
names(geneList) = as.character(data$UNIPROT)
geneList <- sort(geneList, decreasing = TRUE)
barplot(sort(geneList, decreasing = T))
kk2 <- gseKEGG(geneList = geneList, pvalueCutoff = 0.05,
organism = org_code, keyType = "uniprot",
exponent = 1, eps = 0, pAdjustMethod = "none",
minGSSize = 50, maxGSSize = 500, by = "fgsea",
use_internal_data = FALSE)
p4 <- as.grob(gseaplot2(kk2, 1:6, pvalue_table = F))
library(enrichplot)
p4 <- as.grob(gseaplot2(kk2, 1:6, pvalue_table = F))
print(plot_grid(p1, p4, p2, p3, nrow = 2))
a <- length(cnet2$ID)
a
if (a == 0){}
if (a == 0){b <- 0 else b <- 1}
if (a == 0){b <- 0 }else{} b <- 1}
if (a == 0){b <- 0 }else{ b <- 1}
b
a = 1
if (a == 0){b <- 0 }else{ b <- 1}
b
length(formula_res$ID)
length(formula_res)
length(summury(formula_res))
length(summury(formula_res$ID
))
length(sammury(formula_res$ID
))
length(summary(formula_res$ID
))
summary(formula_res$ID
)
summary(formula_res)
as.data.frame(formula_res)
length(as.data.frame(formula_res))
#dotplot
universe <- AnnotationDbi::select(org,keys = rownames(count),
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL", "UNIPROT"))
formula_res <- compareCluster(ENTREZID~group, data=data3,fun="enrichKEGG", organism=org_code, universe = universe)
if (length(as.data.frame(formula_res)) == 0) {
p1 <- NULL
} else{
p1 <- as.grob(dotplot(formula_res, color ="qvalue", font.size = 9))
keggenrich_name <- gsub("\\..+$", "", Count_matrix)
keggenrich_name <- paste(keggenrich_name, "_kegg_enrich.csv", sep = "")
write.table(as.data.frame(formula_res), file = keggenrich_name, row.names = F, col.names = T, sep = ",", quote = F)
}
p1
kk2
cnet1
cnet2
kk2
p1 <- NULL
p2 <- NULL
p3 <- NULL
p4 <- NULL
kegg_name <- gsub("\\..+$", "", Count_matrix)
kegg_name <- paste(gsekegg_name, "_kegg.pdf", sep = "")
pdf(kegg_name, width = 14, height = 14.0)
kegg_name
kegg_name <- gsub("\\..+$", "", Count_matrix)
kegg_name <- paste(kegg_name, "_kegg.pdf", sep = "")
pdf(kegg_name, width = 14, height = 14.0)
print(plot_grid(p1, p4, p2, p3, nrow = 2))
dev.off()
#dotplot
universe <- AnnotationDbi::select(org,keys = rownames(count),
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL", "UNIPROT"))
formula_res <- compareCluster(ENTREZID~group, data=data3,fun="enrichKEGG", organism=org_code, universe = universe)
if (length(as.data.frame(formula_res)) == 0) {
p1 <- NULL
} else{
p1 <- as.grob(dotplot(formula_res, color ="qvalue", font.size = 9))
keggenrich_name <- gsub("\\..+$", "", Count_matrix)
keggenrich_name <- paste(keggenrich_name, "_kegg_enrich.csv", sep = "")
write.table(as.data.frame(formula_res), file = keggenrich_name, row.names = F, col.names = T, sep = ",", quote = F)
}
##cnetplot
upgene <- data3[data3$log2FoldChange > 1,]
geneList_up <- upgene$log2FoldChange
names(geneList_up) = as.character(upgene$ENTREZID)
kk1 <- enrichKEGG(upgene$ENTREZID, organism =org_code,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
cnet1 <- setReadable(kk1, org, 'ENTREZID')
if (length(cnet1$ID) == 0) {
p2 <- NULL
} else{
p2 <- as.grob(cnetplot(cnet1, foldChange=geneList_up,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
downgene <- data3[data3$log2FoldChange < 1,]
geneList_down <- downgene$log2FoldChange
names(geneList_down) = as.character(downgene$ENTREZID)
kk2 <- enrichKEGG(downgene$ENTREZID, organism =org_code,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
cnet2 <- setReadable(kk2, org, 'ENTREZID')
if (length(cnet2$ID) == 0) {
p3 <- NULL
} else{
p3 <- as.grob(cnetplot(cnet2, foldChange=geneList_down,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
##GSEA plot
data <- na.omit(data)
geneList <- data$log2FoldChange
names(geneList) = as.character(data$UNIPROT)
geneList <- sort(geneList, decreasing = TRUE)
barplot(sort(geneList, decreasing = T))
kk2 <- gseKEGG(geneList = geneList, pvalueCutoff = 0.05,
organism = org_code, keyType = "uniprot",
exponent = 1, eps = 0, pAdjustMethod = "none",
minGSSize = 50, maxGSSize = 500, by = "fgsea",
use_internal_data = FALSE)
if (length(kk2$ID) == 0) {
p4 <- NULL
} else{
p4 <- as.grob(gseaplot2(kk2, 1:6, pvalue_table = F))
gsekegg_name <- gsub("\\..+$", "", Count_matrix)
gsekegg_name <- paste(gsekegg_name, "_gsekegg.csv", sep = "")
write.table(as.data.frame(kk2), file = gsekegg_name, row.names = F, col.names = T, sep = ",", quote = F)
}
kegg_name <- gsub("\\..+$", "", Count_matrix)
kegg_name <- paste(kegg_name, "_kegg.pdf", sep = "")
pdf(kegg_name, width = 14, height = 14.0)
print(plot_grid(p1, p4, p2, p3, nrow = 2))
dev.off()
##GOenrichment
##enrichment
formula_res_go <- compareCluster(ENTREZID~group,
data=data3,fun="enrichGO", OrgDb=org)
if (length(as.data.frame(formula_res_go)) == 0) {
g1 <- NULL
} else{
g1 <- as.grob(dotplot(formula_res_go, color ="qvalue", font.size = 9))
goenrich_name <- gsub("\\..+$", "", Count_matrix)
goenrich_name <- paste(goenrich_name, "_go_enrich.csv", sep = "")
write.table(as.data.frame(formula_res_go), file = goenrich_name,
row.names = F, col.names = T, sep = ",", quote = F)
}
##cnetplot
go1 <- enrichGO(upgene$ENTREZID, OrgDb = org,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
cnet_go1 <- setReadable(go1, org, 'ENTREZID')
if (length(cnet_go1$ID) == 0) {
g2 <- NULL
} else{
g2 <- as.grob(cnetplot(cnet_go1, foldChange=geneList_up,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
go2 <- enrichGO(downgene$ENTREZID, OrgDb = org,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
cnet_go2 <- setReadable(go2, org, 'ENTREZID')
if (length(cnet_go2$ID) == 0) {
g3 <- NULL
} else{
g3 <- as.grob(cnetplot(cnet_go2, foldChange=geneList_down,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
##GSEA plot
data <- na.omit(data)
geneList <- data$log2FoldChange
names(geneList) = as.character(data$ENTREZID)
geneList <- sort(geneList, decreasing = TRUE)
go3 <- gseGO(geneList = geneList, pvalueCutoff = 0.05,
OrgDb = org, exponent = 1, eps = 0,
pAdjustMethod = "none", minGSSize = 50,
maxGSSize = 500, by = "fgsea")
if (length(go3$ID) == 0) {
g4 <- NULL
} else{
g4 <- as.grob(gseaplot2(kk2, 1:6, pvalue_table = F))
gsego_name <- gsub("\\..+$", "", Count_matrix)
gsego_name <- paste(gsego_name, "_gseGO.csv", sep = "")
write.table(as.data.frame(kk2), file = gsego_name, row.names = F, col.names = T, sep = ",", quote = F)
}
go_name <- gsub("\\..+$", "", Count_matrix)
go_name <- paste(go_name, "_GO.pdf", sep = "")
pdf(go_name, width = 14, height = 14.0)
print(plot_grid(g1, g4, g2, g3, nrow = 2))
dev.off()
#FC上位50下位50をboxplot
data4 <- data3[sort(data3$log2FoldChange, decreasing = T, index=T)$ix,]
up50 <- data4[1:50,8:(7 + Cond_1 + Cond_2)]
up50$Row.names <- data4[1:50,]$Row.names
up50 <- up50 %>% gather(key=sample, value=value,-Row.names)
up50$sample <- gsub("\\_.+$", "", up50$sample)
library(tidyr)
#FC上位50下位50をboxplot
data4 <- data3[sort(data3$log2FoldChange, decreasing = T, index=T)$ix,]
up50 <- data4[1:50,8:(7 + Cond_1 + Cond_2)]
up50$Row.names <- data4[1:50,]$Row.names
up50 <- up50 %>% gather(key=sample, value=value,-Row.names)
up50$sample <- gsub("\\_.+$", "", up50$sample)
up50$Row.names <- as.factor(up50$Row.names)
up50$sample <- as.factor(up50$sample)
up50$value <- as.numeric(up50$value)
data4 <- data3[sort(data3$log2FoldChange, decreasing = F, index=T)$ix,]
down50 <- data4[1:50,8:(7 + Cond_1 + Cond_2)]
down50$Row.names <- data4[1:50,]$Row.names
down50 <- down50 %>% gather(key=sample, value=value,-Row.names)
down50$sample <- gsub("\\_.+$", "", down50$sample)
down50$Row.names <- as.factor(down50$Row.names)
down50$sample <- as.factor(down50$sample)
down50$value <- as.numeric(down50$value)
data5 <- data4[,8:(7 + Cond_1 + Cond_2)]
rownames(data5) <- data4$Row.names
deg_name <- gsub("\\..+$", "", Count_matrix)
deg_name <- paste(deg_name, "_DEG_count.csv", sep = "")
write.table(data5, file = deg_name, row.names = T, col.names = T, sep = ",", quote = F)
degtop_name <- gsub("\\..+$", "", Count_matrix)
degtop_name <- paste(degtop_name, "_top_DEG.pdf", sep = "")
pdf(degtop_name,height = 10, width = 10)
plot(ggpubr::ggboxplot(up50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)))
plot(ggpubr::ggboxplot(down50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)))
dev.off()
#FC上位50下位50をboxplot
data4 <- data3[sort(data3$log2FoldChange, decreasing = T, index=T)$ix,]
up50 <- data4[1:100,8:(7 + Cond_1 + Cond_2)]
up50 <- data4[1:200,8:(7 + Cond_1 + Cond_2)]
up50$Row.names <- data4[1:200,]$Row.names
up50 <- up50 %>% gather(key=sample, value=value,-Row.names)
up50$sample <- gsub("\\_.+$", "", up50$sample)
up50$Row.names <- as.factor(up50$Row.names)
up50$sample <- as.factor(up50$sample)
up50$value <- as.numeric(up50$value)
data4 <- data3[sort(data3$log2FoldChange, decreasing = F, index=T)$ix,]
down50 <- data4[1:200,8:(7 + Cond_1 + Cond_2)]
down50$Row.names <- data4[1:200,]$Row.names
down50 <- down50 %>% gather(key=sample, value=value,-Row.names)
down50$sample <- gsub("\\_.+$", "", down50$sample)
down50$Row.names <- as.factor(down50$Row.names)
down50$sample <- as.factor(down50$sample)
down50$value <- as.numeric(down50$value)
data5 <- data4[,8:(7 + Cond_1 + Cond_2)]
rownames(data5) <- data4$Row.names
deg_name <- gsub("\\..+$", "", Count_matrix)
deg_name <- paste(deg_name, "_DEG_count.csv", sep = "")
write.table(data5, file = deg_name, row.names = T, col.names = T, sep = ",", quote = F)
degtop_name <- gsub("\\..+$", "", Count_matrix)
degtop_name <- paste(degtop_name, "_top_DEG.pdf", sep = "")
pdf(degtop_name,height = 10, width = 10)
plot(ggpubr::ggboxplot(up50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)))
plot(ggpubr::ggboxplot(down50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)))
dev.off()
up50 <- data4[1:400,8:(7 + Cond_1 + Cond_2)]
View(up50)
heatmap
ggmaplot
View(data4)
up_all <- dplyr::filter(data4, group = "upregulated")
up_all <- dplyr::filter(data4, group == "upregulated")
up_all <- dplyr::filter(data4, log2FoldChange > 0)
#FC上位50下位50をboxplot
data4 <- data3[sort(data3$log2FoldChange, decreasing = T, index=T)$ix,]
up_all <- dplyr::filter(data4, log2FoldChange > 0)
head(data4)
data <- read.table(EBseq_Result,header = T, row.names = 1)
count <- read.table(Count_matrix,header=T, row.names = 1)
data <- merge(data,count, by=0)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
my.symbols <- data$Row.names
gene_IDs<-AnnotationDbi::select(org,keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL", "UNIPROT"))
colnames(gene_IDs) <- c("Row.names","ENTREZID","UNIPROT")
data <- merge(data, gene_IDs, by="Row.names")
data <- data %>% distinct(Row.names, .keep_all = T)
log2FoldChange <- -1 * log2(data$PostFC)
data <- cbind(data, log2FoldChange)
baseMean <- (data$C1Mean + data$C2Mean)*(1/2)
data <- cbind(data, baseMean)
padj <- data$PPEE
data <- cbind(data, padj)
##MA-plot
m1 <- as.grob(ggmaplot(data, fdr = fdr, fc = fc, size = 0.4,
palette = c("#B31B21", "#1465AC", "darkgray"),
genenames = as.vector(data$Row.names),
legend = "top", top = 20,
font.label = c("bold", 6),font.legend = "bold",
font.main = "bold",
ggtheme = ggplot2::theme_minimal(),
select.top.method = "fc"))
data2 <- data[abs(data$log2FoldChange) > log(fc, 2),]
data2$group <- "upregulated"
fdr =0.05
fc = 2
data2 <- data[abs(data$log2FoldChange) > log(fc, 2),]
data2$group <- "upregulated"
data2$group[data2$log2FoldChange < 0] <- "downregulated"
data3 <- data2[abs(data2$PPEE) < fdr,]
head(data3)
#FC上位50下位50をboxplot
data4 <- data3[sort(data3$log2FoldChange, decreasing = T, index=T)$ix,]
up_all <- dplyr::filter(data4, log2FoldChange > 0)
up50 <- up_all[1:50,8:(7 + Cond_1 + Cond_2)]
up50$Row.names <- up50[1:50,]$Row.names
up50 <- up50 %>% gather(key=sample, value=value,-Row.names)
up50$sample <- gsub("\\_.+$", "", up50$sample)
up50$Row.names <- as.factor(up50$Row.names)
head(up)
head(up50)
#FC上位50下位50をboxplot
data4 <- data3[sort(data3$log2FoldChange, decreasing = T, index=T)$ix,]
up_all <- dplyr::filter(data4, log2FoldChange > 0)
up50 <- up_all[1:50,8:(7 + Cond_1 + Cond_2)]
up50$Row.names <- up50[1:50,]$Row.names
up50 <- up50 %>% gather(key=sample, value=value,-Row.names)
head(up50)
head(up_all)
head(data4)
up50 <- up_all[1:50,8:(7 + Cond_1 + Cond_2)]
head(up50)
up50$Row.names <- up50[1:50,]$Row.names
head(up50)
up50$Row.names <- up_all[1:50,]$Row.names
up50 <- up50 %>% gather(key=sample, value=value,-Row.names)
up50$sample <- gsub("\\_.+$", "", up50$sample)
up50$Row.names <- as.factor(up50$Row.names)
up50$sample <- as.factor(up50$sample)
up50$value <- as.numeric(up50$value)
data4 <- data3[sort(data3$log2FoldChange, decreasing = F, index=T)$ix,]
down_all <- dplyr::filter(data4, log2FoldChange < 0)
down50 <- down_all[1:50,8:(7 + Cond_1 + Cond_2)]
down50$Row.names <- down_all[1:50,]$Row.names
down50 <- down50 %>% gather(key=sample, value=value,-Row.names)
down50$sample <- gsub("\\_.+$", "", down50$sample)
down50$Row.names <- as.factor(down50$Row.names)
down50$sample <- as.factor(down50$sample)
down50$value <- as.numeric(down50$value)
data5 <- data4[,8:(7 + Cond_1 + Cond_2)]
rownames(data5) <- data4$Row.names
deg_name <- gsub("\\..+$", "", Count_matrix)
deg_name <- paste(deg_name, "_DEG_count.csv", sep = "")
write.table(data5, file = deg_name, row.names = T, col.names = T, sep = ",", quote = F)
degtop_name <- gsub("\\..+$", "", Count_matrix)
degtop_name <- paste(degtop_name, "_top_DEG.pdf", sep = "")
pdf(degtop_name,height = 10, width = 10)
plot(ggpubr::ggboxplot(up50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)))
plot(ggpubr::ggboxplot(down50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)))
dev.off()
devtools::load_all(".")
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "human",Cond_1 = 3, Cond_2 = 3, fc = 2.5, fdr = 0.01)
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "human",Cond_1 = 2, Cond_2 = 2, fc = 2.5, fdr = 0.01)
formula_res <- try(compareCluster(ENTREZID~group, data=data3,fun="enrichKEGG", organism=org_code, universe = universe))
devtools::load_all(".")
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "human",Cond_1 = 2, Cond_2 = 2, fc = 2.5, fdr = 0.01)
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "human",Cond_1 = 2, Cond_2 = 2, fc = 2, fdr = 0.01)
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "human",Cond_1 = 2, Cond_2 = 2, fc = 2, fdr = 0.05)
devtools::load_all(".")
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "human",Cond_1 = 2, Cond_2 = 2, fc = 2, fdr = 0.05)
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "human",Cond_1 = 2, Cond_2 = 2, fc = 1.5, fdr = 0.05)
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "mouse",Cond_1 = 2, Cond_2 = 2, fc = 1.5, fdr = 0.01)
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "mouse",Cond_1 = 2, Cond_2 = 2, fc = 2, fdr = 0.01)
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "mouse",Cond_1 = 2, Cond_2 = 2, fc = 3, fdr = 0.01)
dir_name <- Count_matrix
dir_name <- paste(dir_name, paste("_fc", fc, sep = ""), sep = "")
dir_name <- paste(dir_name, paste("_fdr", fdr, sep = ""), sep = "")
dir_name
dir_name <- gsub(".txt", "", Count_matrix)
dir_name <- paste(dir_name, paste("_fc", fc, sep = ""), sep = "")
dir_name <- paste(dir_name, paste("_fdr", fdr, sep = ""), sep = "")
dir_name
ma_name <- paste("\\..+$", "", Count_matrix)
ma_name <- paste(paste(dir_name, "/", sep = ""),
ma_name, sep = "")
ma_name <- paste(ma_name, "_ma-heatmap.pdf", sep = "")
ma_name
ma_name <- gsub("\\..+$", "", Count_matrix)
ma_name <- paste(paste(dir_name, "/", sep = ""),
ma_name, sep = "")
ma_name <- paste(ma_name, "_ma-heatmap.pdf", sep = "")
ma_name
ma_name <- paste(paste(dir_name, "/", sep = ""),
"ma-heatmap.pdf", sep = "")
ma_name
devtools::load_all(".")
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "mouse",Cond_1 = 2, Cond_2 = 2, fc = 3, fdr = 0.01)
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "mouse",Cond_1 = 2, Cond_2 = 2, fc = 2, fdr = 0.01)
pairwiseEBseq_viewer(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", EBseq_Result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt",Species = "mouse",Cond_1 = 2, Cond_2 = 2)
help(package ="clusterProfiler")
head(EBseq_Result)
data <- read.table(EBseq_Result,header = T, row.names = 1)
head(data)
library(KEPackage)
devtools::load_all(".")
DEG_overview(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", DEG_result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt", Type = "EBseq", Species = "mouse",Cond_1 = 2, Cond_2 = 2, fc = 2, fdr = 0.01)
data <- read.table(EBseq_Result,header = T, row.names = 1)
count <- read.table(Count_matrix,header=T, row.names = 1)
data <- merge(data,count, by=0)
data$padj <- data$PPEE
head(data)
data$log2FoldChange <- -1 * log2(data$PostFC)
head(data)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
if (Type == "EBseq"){
data$padj <- data$PPEE
}
if (Type == "EBseq"){
data$log2FoldChange <- -1 * log2(data$PostFC)
}
my.symbols <- data$Row.names
gene_IDs<-AnnotationDbi::select(org,keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL", "UNIPROT"))
devtools::load_all(".")
DEG_overview(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", DEG_result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt", Type = "EBseq", Species = "mouse",Cond_1 = 2, Cond_2 = 2, fc = 2, fdr = 0.01)
DEG_overview(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_TPM_pair.txt", DEG_result = "/Users/kanetoh/Downloads/RNA-seq analysis/aKG-p53 paper/GeneMat_Count_result_new.txt", Type = "EBseq", Species = "mouse",Cond_1 = 2, Cond_2 = 2, fc = 1.5, fdr = 0.01)
library(rnaseqviewer)
library(rnaseqviewer)
setwd("~/Desktop/デモデータ/acly")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fdr = 0.01,fc = 4)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",Cond_1 = 3,Cond_2 = 3,fdr = 0.01,fc = 4)
kmeansClustring(Count_matrix = "GeneMat_TPM.txt",Species = "human",km = 4,km_repeats = 100,basemean_cutoff = 10,variance_cutoff = )
kmeansClustring(Count_matrix = "GeneMat_TPM.txt",Species = "human",km = 4,km_repeats = 100,basemean_cutoff = 10,variance_cutoff = 500)
devtools::install_github("Kan-E/rnaseqviewer")
setwd("~/Downloads/RNA-seq analysis/aKG-p53 paper")
rnaseqviewer::DEG_overview()
devtools::install_github("Kan-E/rnaseqviewer")
rnaseqviewer::DEG_overview(Count_matrix = "GeneMat_TPM_pair.txt",DEG_result = "GeneMat_Count_result_new.txt")
