#' @importFrom cowplot plot_grid
#' @param Count_matrix Directory of count matrix
#' @param Species Species
#' @param km number of k-means clustering
#' @param km_repeats number of k-means runs to get a consensus k-means clustering
#' @param basemean_cutoff basemean cutoff
#' @param variance_cutoff variance cutoff
#' @export
#'
kmeansClustring <- function(Count_matrix, Species, km, km_repeats,
basemean_cutoff, variance_cutoff){
dir_name <- gsub("\\..+$", "", Count_matrix)
dir_name <- paste(dir_name, paste("_km", km, sep = ""), sep = "")
dir.create(dir_name, showWarnings = F)
RNAseq <- read.table(Count_matrix, header=T, row.names = 1)
RNAseq2 <- filter(RNAseq, apply(RNAseq,1,mean) > basemean_cutoff)
RNAseq3 <- RNAseq2[order(apply(RNAseq2, 1, mad), decreasing = T)[1:variance_cutoff],]
data.z <- genescale(RNAseq3, axis = 1, method = "Z")
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= km, cluster_row_slices = F, row_km_repeats = km_repeats,
show_row_names = F)
ht <- draw(ht)
r.dend <- row_dend(ht)
rcl.list <- row_order(ht)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(ht))){ if (i == 1) {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")} else {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)}}
cluster.file <- paste(paste(dir_name, "/", sep = ""),
"gene_cluster.txt", sep = "")
write.table(out, file= cluster.file, sep="\t", quote=F, row.names=FALSE)
table.file <- paste(paste(dir_name, "/", sep = ""),
paste("top_", paste(variance_cutoff, "_variant_genes.txt",
sep = ""), sep = ""), sep = "")
write.table(RNAseq3, file= table.file, sep="\t", quote=F, row.names = T)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
my.symbols <- out
gene_IDs <- AnnotationDbi::select(org, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
colnames(gene_IDs) <- c("GeneID","ENTREZID")
data2 <- merge(out, gene_IDs, by="GeneID")
formula_res <- compareCluster(ENTREZID~Cluster, data = data2, fun="enrichKEGG", organism=org_code)
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9)
keggenrich_name <- paste(paste(dir_name, "/", sep = ""),
"kegg_enrich.csv", sep = "")
write.table(as.data.frame(formula_res), file = keggenrich_name, row.names = F, col.names = T, sep = ",", quote = F)
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 8)
goenrich_name <- paste(paste(dir_name, "/", sep = ""),
"go_enrich.csv", sep = "")
write.table(as.data.frame(formula_res_go), file = goenrich_name,
row.names = F, col.names = T, sep = ",", quote = F)
heatmap.file <- paste(paste(dir_name, "/", sep = ""),
"heatmap.pdf", sep = "")
pdf(heatmap.file, width = 3, height = 4)
print(ht)
dev.off()
kegg.file <- paste(paste(dir_name, "/", sep = ""),
"enrichment_kegg.pdf", sep = "")
pdf(kegg.file, width = (km + 2), height = 4)
print(p1)
dev.off()
go.file <- paste(paste(dir_name, "/", sep = ""),
"enrichment_go.pdf", sep = "")
pdf(go.file, width = (km + 4), height = 4)
print(g1)
dev.off()
}
kmeansClustring(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/GeneMat_TPM.txt",Species = "human", km = 4, km_repeats = 1,basemean_cutoff = 1, variance_cutoff = 1000)
kmeansClustring(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/GeneMat_TPM.txt",Species = "human", km = 6, km_repeats = 1,basemean_cutoff = 1, variance_cutoff = 1000)
#' @import ggnewscale
#' @importFrom cowplot plot_grid
#' @param Count_matrix Directory of count matrix
#' @param Species Species
#' @param km number of k-means clustering
#' @param km_repeats number of k-means runs to get a consensus k-means clustering
#' @param basemean_cutoff basemean cutoff
#' @param variance_cutoff variance cutoff
#' @export
#'
kmeansClustring <- function(Count_matrix, Species, km, km_repeats,
basemean_cutoff, variance_cutoff){
dir_name <- gsub("\\..+$", "", Count_matrix)
dir_name <- paste(dir_name, paste("_km", km, sep = ""), sep = "")
dir.create(dir_name, showWarnings = F)
RNAseq <- read.table(Count_matrix, header=T, row.names = 1)
RNAseq2 <- filter(RNAseq, apply(RNAseq,1,mean) > basemean_cutoff)
RNAseq3 <- RNAseq2[order(apply(RNAseq2, 1, mad), decreasing = T)[1:variance_cutoff],]
data.z <- genescale(RNAseq3, axis = 1, method = "Z")
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= km, cluster_row_slices = F, row_km_repeats = km_repeats,
show_row_names = F)
ht <- draw(ht)
r.dend <- row_dend(ht)
rcl.list <- row_order(ht)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(ht))){ if (i == 1) {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")} else {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)}}
cluster.file <- paste(paste(dir_name, "/", sep = ""),
"gene_cluster.txt", sep = "")
write.table(out, file= cluster.file, sep="\t", quote=F, row.names=FALSE)
table.file <- paste(paste(dir_name, "/", sep = ""),
paste("top_", paste(variance_cutoff, "_variant_genes.txt",
sep = ""), sep = ""), sep = "")
write.table(RNAseq3, file= table.file, sep="\t", quote=F, row.names = T)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
my.symbols <- out
gene_IDs <- AnnotationDbi::select(org, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
colnames(gene_IDs) <- c("GeneID","ENTREZID")
data2 <- merge(out, gene_IDs, by="GeneID")
formula_res <- compareCluster(ENTREZID~Cluster, data = data2, fun="enrichKEGG", organism=org_code)
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9)
keggenrich_name <- paste(paste(dir_name, "/", sep = ""),
"kegg_enrich.csv", sep = "")
write.table(as.data.frame(formula_res), file = keggenrich_name, row.names = F, col.names = T, sep = ",", quote = F)
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 8)
goenrich_name <- paste(paste(dir_name, "/", sep = ""),
"go_enrich.csv", sep = "")
write.table(as.data.frame(formula_res_go), file = goenrich_name,
row.names = F, col.names = T, sep = ",", quote = F)
heatmap.file <- paste(paste(dir_name, "/", sep = ""),
"heatmap.pdf", sep = "")
pdf(heatmap.file, width = 3, height = 4)
print(ht)
dev.off()
kegg.file <- paste(paste(dir_name, "/", sep = ""),
"enrichment_kegg.pdf", sep = "")
pdf(kegg.file, width = (km + 4/km), height = 4)
print(p1)
dev.off()
go.file <- paste(paste(dir_name, "/", sep = ""),
"enrichment_go.pdf", sep = "")
pdf(go.file, width = (km + 4/km), height = 4)
print(g1)
dev.off()
}
kmeansClustring(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/GeneMat_TPM.txt",Species = "human", km = 6, km_repeats = 1,basemean_cutoff = 1, variance_cutoff = 1000)
kmeansClustring(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/GeneMat_TPM.txt",Species = "human", km = 4, km_repeats = 1,basemean_cutoff = 1, variance_cutoff = 1000)
#' @import ggnewscale
#' @importFrom cowplot plot_grid
#' @param Count_matrix Directory of count matrix
#' @param Species Species
#' @param km number of k-means clustering
#' @param km_repeats number of k-means runs to get a consensus k-means clustering
#' @param basemean_cutoff basemean cutoff
#' @param variance_cutoff variance cutoff
#' @export
#'
kmeansClustring <- function(Count_matrix, Species, km, km_repeats,
basemean_cutoff, variance_cutoff){
dir_name <- gsub("\\..+$", "", Count_matrix)
dir_name <- paste(dir_name, paste("_km", km, sep = ""), sep = "")
dir.create(dir_name, showWarnings = F)
RNAseq <- read.table(Count_matrix, header=T, row.names = 1)
RNAseq2 <- filter(RNAseq, apply(RNAseq,1,mean) > basemean_cutoff)
RNAseq3 <- RNAseq2[order(apply(RNAseq2, 1, mad), decreasing = T)[1:variance_cutoff],]
data.z <- genescale(RNAseq3, axis = 1, method = "Z")
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= km, cluster_row_slices = F, row_km_repeats = km_repeats,
show_row_names = F)
ht <- draw(ht)
r.dend <- row_dend(ht)
rcl.list <- row_order(ht)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(ht))){ if (i == 1) {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")} else {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)}}
cluster.file <- paste(paste(dir_name, "/", sep = ""),
"gene_cluster.txt", sep = "")
write.table(out, file= cluster.file, sep="\t", quote=F, row.names=FALSE)
table.file <- paste(paste(dir_name, "/", sep = ""),
paste("top_", paste(variance_cutoff, "_variant_genes.txt",
sep = ""), sep = ""), sep = "")
write.table(RNAseq3, file= table.file, sep="\t", quote=F, row.names = T)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
my.symbols <- out
gene_IDs <- AnnotationDbi::select(org, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
colnames(gene_IDs) <- c("GeneID","ENTREZID")
data2 <- merge(out, gene_IDs, by="GeneID")
formula_res <- compareCluster(ENTREZID~Cluster, data = data2, fun="enrichKEGG", organism=org_code)
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9)
keggenrich_name <- paste(paste(dir_name, "/", sep = ""),
"kegg_enrich.csv", sep = "")
write.table(as.data.frame(formula_res), file = keggenrich_name, row.names = F, col.names = T, sep = ",", quote = F)
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 8)
goenrich_name <- paste(paste(dir_name, "/", sep = ""),
"go_enrich.csv", sep = "")
write.table(as.data.frame(formula_res_go), file = goenrich_name,
row.names = F, col.names = T, sep = ",", quote = F)
heatmap.file <- paste(paste(dir_name, "/", sep = ""),
"heatmap.pdf", sep = "")
pdf(heatmap.file, width = 3, height = 4)
print(ht)
dev.off()
kegg.file <- paste(paste(dir_name, "/", sep = ""),
"enrichment_kegg.pdf", sep = "")
pdf(kegg.file, width = (km + 4/km), height = 4)
print(p1)
dev.off()
go.file <- paste(paste(dir_name, "/", sep = ""),
"enrichment_go.pdf", sep = "")
pdf(go.file, width = (km + 6/km), height = 4)
print(g1)
dev.off()
}
kmeansClustring(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/GeneMat_TPM.txt",Species = "human", km = 4, km_repeats = 1,basemean_cutoff = 1, variance_cutoff = 1000)
#' @import ggnewscale
#' @importFrom cowplot plot_grid
#' @param Count_matrix Directory of count matrix
#' @param Species Species
#' @param km number of k-means clustering
#' @param km_repeats number of k-means runs to get a consensus k-means clustering
#' @param basemean_cutoff basemean cutoff
#' @param variance_cutoff variance cutoff
#' @export
#'
kmeansClustring <- function(Count_matrix, Species, km, km_repeats,
basemean_cutoff, variance_cutoff){
dir_name <- gsub("\\..+$", "", Count_matrix)
dir_name <- paste(dir_name, paste("_km", km, sep = ""), sep = "")
dir.create(dir_name, showWarnings = F)
RNAseq <- read.table(Count_matrix, header=T, row.names = 1)
RNAseq2 <- filter(RNAseq, apply(RNAseq,1,mean) > basemean_cutoff)
RNAseq3 <- RNAseq2[order(apply(RNAseq2, 1, mad), decreasing = T)[1:variance_cutoff],]
data.z <- genescale(RNAseq3, axis = 1, method = "Z")
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= km, cluster_row_slices = F, row_km_repeats = km_repeats,
show_row_names = F)
ht <- draw(ht)
r.dend <- row_dend(ht)
rcl.list <- row_order(ht)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(ht))){ if (i == 1) {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")} else {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)}}
cluster.file <- paste(paste(dir_name, "/", sep = ""),
"gene_cluster.txt", sep = "")
write.table(out, file= cluster.file, sep="\t", quote=F, row.names=FALSE)
table.file <- paste(paste(dir_name, "/", sep = ""),
paste("top_", paste(variance_cutoff, "_variant_genes.txt",
sep = ""), sep = ""), sep = "")
write.table(RNAseq3, file= table.file, sep="\t", quote=F, row.names = T)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
my.symbols <- out
gene_IDs <- AnnotationDbi::select(org, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
colnames(gene_IDs) <- c("GeneID","ENTREZID")
data2 <- merge(out, gene_IDs, by="GeneID")
formula_res <- compareCluster(ENTREZID~Cluster, data = data2, fun="enrichKEGG", organism=org_code)
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9)
keggenrich_name <- paste(paste(dir_name, "/", sep = ""),
"kegg_enrich.csv", sep = "")
write.table(as.data.frame(formula_res), file = keggenrich_name, row.names = F, col.names = T, sep = ",", quote = F)
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 8)
goenrich_name <- paste(paste(dir_name, "/", sep = ""),
"go_enrich.csv", sep = "")
write.table(as.data.frame(formula_res_go), file = goenrich_name,
row.names = F, col.names = T, sep = ",", quote = F)
heatmap.file <- paste(paste(dir_name, "/", sep = ""),
"heatmap.pdf", sep = "")
pdf(heatmap.file, width = 3, height = 4)
print(ht)
dev.off()
kegg.file <- paste(paste(dir_name, "/", sep = ""),
"enrichment_kegg.pdf", sep = "")
pdf(kegg.file, width = (km + 4/km), height = 4)
print(p1)
dev.off()
go.file <- paste(paste(dir_name, "/", sep = ""),
"enrichment_go.pdf", sep = "")
pdf(go.file, width = (km + 8/km), height = 4)
print(g1)
dev.off()
}
kmeansClustring(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/GeneMat_TPM.txt",Species = "human", km = 4, km_repeats = 1,basemean_cutoff = 1, variance_cutoff = 1000)
#' @import ggnewscale
#' @importFrom cowplot plot_grid
#' @param Count_matrix Directory of count matrix
#' @param Species Species
#' @param km number of k-means clustering
#' @param km_repeats number of k-means runs to get a consensus k-means clustering
#' @param basemean_cutoff basemean cutoff
#' @param variance_cutoff variance cutoff
#' @export
#'
kmeansClustring <- function(Count_matrix, Species, km, km_repeats,
basemean_cutoff, variance_cutoff){
dir_name <- gsub("\\..+$", "", Count_matrix)
dir_name <- paste(dir_name, paste("_km", km, sep = ""), sep = "")
dir.create(dir_name, showWarnings = F)
RNAseq <- read.table(Count_matrix, header=T, row.names = 1)
RNAseq2 <- filter(RNAseq, apply(RNAseq,1,mean) > basemean_cutoff)
RNAseq3 <- RNAseq2[order(apply(RNAseq2, 1, mad), decreasing = T)[1:variance_cutoff],]
data.z <- genescale(RNAseq3, axis = 1, method = "Z")
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= km, cluster_row_slices = F, row_km_repeats = km_repeats,
show_row_names = F)
ht <- draw(ht)
r.dend <- row_dend(ht)
rcl.list <- row_order(ht)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(ht))){ if (i == 1) {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")} else {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)}}
cluster.file <- paste(paste(dir_name, "/", sep = ""),
"gene_cluster.txt", sep = "")
write.table(out, file= cluster.file, sep="\t", quote=F, row.names=FALSE)
table.file <- paste(paste(dir_name, "/", sep = ""),
paste("top_", paste(variance_cutoff, "_variant_genes.txt",
sep = ""), sep = ""), sep = "")
write.table(RNAseq3, file= table.file, sep="\t", quote=F, row.names = T)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
my.symbols <- out
gene_IDs <- AnnotationDbi::select(org, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
colnames(gene_IDs) <- c("GeneID","ENTREZID")
data2 <- merge(out, gene_IDs, by="GeneID")
formula_res <- compareCluster(ENTREZID~Cluster, data = data2, fun="enrichKEGG", organism=org_code)
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9)
keggenrich_name <- paste(paste(dir_name, "/", sep = ""),
"kegg_enrich.csv", sep = "")
write.table(as.data.frame(formula_res), file = keggenrich_name, row.names = F, col.names = T, sep = ",", quote = F)
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 8)
goenrich_name <- paste(paste(dir_name, "/", sep = ""),
"go_enrich.csv", sep = "")
write.table(as.data.frame(formula_res_go), file = goenrich_name,
row.names = F, col.names = T, sep = ",", quote = F)
heatmap.file <- paste(paste(dir_name, "/", sep = ""),
"heatmap.pdf", sep = "")
pdf(heatmap.file, width = 3, height = 4)
print(ht)
dev.off()
kegg.file <- paste(paste(dir_name, "/", sep = ""),
"enrichment_kegg.pdf", sep = "")
pdf(kegg.file, width = (km + 5/km), height = 4)
print(p1)
dev.off()
go.file <- paste(paste(dir_name, "/", sep = ""),
"enrichment_go.pdf", sep = "")
pdf(go.file, width = (km + 12/km), height = 4)
print(g1)
dev.off()
}
kmeansClustring(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/GeneMat_TPM.txt",Species = "human", km = 4, km_repeats = 1,basemean_cutoff = 1, variance_cutoff = 1000)
kmeansClustring(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/GeneMat_TPM.txt",Species = "human", km = 4, km_repeats = 1,basemean_cutoff = 1, variance_cutoff = 1000)
kmeansClustring(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/GeneMat_TPM.txt",Species = "human", km = 10, km_repeats = 1,basemean_cutoff = 1, variance_cutoff = 1000)
#' @import ggnewscale
#' @importFrom cowplot plot_grid
#' @param Count_matrix Directory of count matrix
#' @param Species Species
#' @param km number of k-means clustering
#' @param km_repeats number of k-means runs to get a consensus k-means clustering
#' @param basemean_cutoff basemean cutoff
#' @param variance_cutoff variance cutoff
#' @export
#'
kmeansClustring <- function(Count_matrix, Species, km, km_repeats,
basemean_cutoff, variance_cutoff){
dir_name <- gsub("\\..+$", "", Count_matrix)
dir_name <- paste(dir_name, paste("_km", km, sep = ""), sep = "")
dir.create(dir_name, showWarnings = F)
RNAseq <- read.table(Count_matrix, header=T, row.names = 1)
RNAseq2 <- filter(RNAseq, apply(RNAseq,1,mean) > basemean_cutoff)
RNAseq3 <- RNAseq2[order(apply(RNAseq2, 1, mad), decreasing = T)[1:variance_cutoff],]
data.z <- genescale(RNAseq3, axis = 1, method = "Z")
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= km, cluster_row_slices = F, row_km_repeats = km_repeats,
show_row_names = F)
ht <- draw(ht)
r.dend <- row_dend(ht)
rcl.list <- row_order(ht)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(ht))){ if (i == 1) {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")} else {
clu <- t(t(row.names(data.z[row_order(ht)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)}}
cluster.file <- paste(paste(dir_name, "/", sep = ""),
paste("gene_cluster_",
paste(variance_cutoff, "_variant_genes.txt", sep = ""),
sep = ""), sep = "")
write.table(out, file= cluster.file, sep="\t", quote=F, row.names=FALSE)
table.file <- paste(paste(dir_name, "/", sep = ""),
paste("top_", paste(variance_cutoff, "_variant_genes.txt",
sep = ""), sep = ""), sep = "")
write.table(RNAseq3, file= table.file, sep="\t", quote=F, row.names = T)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
my.symbols <- out
gene_IDs <- AnnotationDbi::select(org, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
colnames(gene_IDs) <- c("GeneID","ENTREZID")
data2 <- merge(out, gene_IDs, by="GeneID")
formula_res <- compareCluster(ENTREZID~Cluster, data = data2,
fun="enrichKEGG", organism=org_code)
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9)
keggenrich_name <-  paste(paste(dir_name, "/", sep = ""),
paste("kegg_enrich_",
paste(variance_cutoff,
"_variant_genes.csv",
sep = ""), sep = ""), sep = "")
write.table(as.data.frame(formula_res), file = keggenrich_name,
row.names = F, col.names = T, sep = ",", quote = F)
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 8)
goenrich_name <- paste(paste(dir_name, "/", sep = ""),
paste("go_enrich_",
paste(variance_cutoff,
"_variant_genes.csv",
sep = ""), sep = ""), sep = "")
write.table(as.data.frame(formula_res_go), file = goenrich_name,
row.names = F, col.names = T, sep = ",", quote = F)
heatmap.file <- paste(paste(dir_name, "/", sep = ""),
paste("heatmap_",
paste(variance_cutoff, "_variant_genes.pdf",
sep = ""), sep = ""), sep = "")
pdf(heatmap.file, width = 3, height = 4)
print(ht)
dev.off()
kegg.file <- paste(paste(dir_name, "/", sep = ""),
paste("enrichment_kegg_",
paste(variance_cutoff, "_variant_genes.pdf",
sep = ""), sep = ""), sep = "")
pdf(kegg.file, width = (km + 5/km), height = 4)
print(p1)
dev.off()
go.file <- paste(paste(dir_name, "/", sep = ""),
paste("enrichment_go_",
paste(variance_cutoff, "_variant_genes.pdf",
sep = ""), sep = ""), sep = "")
pdf(go.file, width = (km + 12/km), height = 4)
print(g1)
dev.off()
}
kmeansClustring(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/GeneMat_TPM.txt",Species = "human", km = 10, km_repeats = 1,basemean_cutoff = 1, variance_cutoff = 1000)
kmeansClustring(Count_matrix = "/Users/kanetoh/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/GeneMat_TPM.txt",Species = "human", km = 2, km_repeats = 1,basemean_cutoff = 1, variance_cutoff = 1000)
