m1 <- as.grob(ggmaplot(data, fdr = fdr, fc = fc, size = 0.4,
palette = c("#B31B21", "#1465AC", "darkgray"),
genenames = as.vector(data$Row.names),
legend = "top", top = 20,
font.label = c("bold", 6),font.legend = "bold",
font.main = "bold",
ggtheme = ggplot2::theme_minimal(),
select.top.method = "fc"))
data2 <- data[abs(data$log2FoldChange) > log(fc, 2),]
if(nrow(data2) != 0){
data2$group <- "upregulated"
data2$group[data2$log2FoldChange < 0] <- "downregulated"
data3 <- data2[abs(data2$padj) < fdr,]
##heatmap
data.z <- genescale(data3[,8:(7 + Cond_1 + Cond_2)], axis=1, method="Z")
ht <- as.grob(Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
show_row_names = F, show_row_dend = T))
ma_name <- paste(paste(dir_name, "/", sep = ""),
"ma-heatmap.pdf", sep = "")
pdf(ma_name, width = 7, height = 3.5)
print(plot_grid(m1, ht, rel_widths = c(2, 1)))
dev.off()
#dotplot
universe <- AnnotationDbi::select(org,keys = rownames(count),
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL", "UNIPROT"))
formula_res <- try(compareCluster(ENTREZID~group, data=data3,
fun="enrichKEGG", organism=org_code,
universe = universe), silent = T)
if (class(formula_res) == "try-error") {
formula_res <- NA
}
if ((length(as.data.frame(formula_res)) == 0) ||
is.na(unique(as.data.frame(formula_res)$qvalue)) ||
is.na(formula_res)) {
p1 <- NULL
} else{
p1 <- as.grob(dotplot(formula_res, color ="qvalue", font.size = 9))
keggenrich_name <- paste(paste(dir_name, "/", sep = ""),
"kegg_enrich.txt", sep = "")
write.table(as.data.frame(formula_res), file = keggenrich_name, row.names = F, col.names = T, sep = "\t", quote = F)
}
##cnetplot
upgene <- data3[data3$log2FoldChange > log(fc, 2),]
geneList_up <- upgene$log2FoldChange
names(geneList_up) = as.character(upgene$ENTREZID)
kk1 <- enrichKEGG(upgene$ENTREZID, organism =org_code,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
if(is.null(kk1)){
cnet1 <- NULL
} else cnet1 <- setReadable(kk1, org, 'ENTREZID')
if (length(cnet1$ID) == 0) {
p2 <- NULL
} else{
p2 <- as.grob(cnetplot(cnet1, foldChange=geneList_up,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
downgene <- data3[data3$log2FoldChange < log(1/fc, 2),]
geneList_down <- downgene$log2FoldChange
names(geneList_down) = as.character(downgene$ENTREZID)
kk2 <- enrichKEGG(downgene$ENTREZID, organism =org_code,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
if(is.null(kk2)){
cnet2 <- NULL
} else cnet2 <- setReadable(kk2, org, 'ENTREZID')
if (length(cnet2$ID) == 0) {
p3 <- NULL
} else{
p3 <- as.grob(cnetplot(cnet2, foldChange=geneList_down,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
##GSEA plot
data_uniprot <- na.omit(data)
data_uniprot <- data_uniprot %>% distinct(UNIPROT, .keep_all = T)
geneList <- data_uniprot$log2FoldChange
names(geneList) = as.character(data_uniprot$UNIPROT)
geneList <- sort(geneList, decreasing = TRUE)
kk2 <- gseKEGG(geneList = geneList, pvalueCutoff = 0.05,
organism = org_code, keyType = "uniprot",
exponent = 1, eps = 0, pAdjustMethod = "none",
minGSSize = 50, maxGSSize = 500, by = "fgsea",
use_internal_data = FALSE)
if (length(kk2$ID) == 0) {
p4 <- NULL
} else{
p4 <- as.grob(gseaplot2(kk2, 1:6, pvalue_table = F))
gsekegg_name <- paste(paste(dir_name, "/", sep = ""),
"gsekegg.txt", sep = "")
write.table(as.data.frame(kk2), file = gsekegg_name, row.names = F, col.names = T, sep = "\t", quote = F)
}
kegg_name <- paste(paste(dir_name, "/", sep = ""),
"kegg.pdf", sep = "")
pdf(kegg_name, width = 14, height = 14.0)
print(plot_grid(p1, p4, p2, p3, nrow = 2))
dev.off()
##GOenrichment
##enrichment
formula_res_go <- try(compareCluster(ENTREZID~group,
data=data3,fun="enrichGO", OrgDb=org), silent =T)
if (class(formula_res_go) == "try-error") {
formula_res_go <- NA
}
if ((length(as.data.frame(formula_res_go)) == 0) ||
is.na(unique(as.data.frame(formula_res_go)$qvalue)) ||
is.na(formula_res_go)) {
g1 <- NULL
} else{
g1 <- as.grob(dotplot(formula_res_go, color ="qvalue", font.size = 9))
goenrich_name <- paste(paste(dir_name, "/", sep = ""),
"go_enrich.txt", sep = "")
write.table(as.data.frame(formula_res_go), file = goenrich_name,
row.names = F, col.names = T, sep = "\t", quote = F)
}
##cnetplot
go1 <- enrichGO(upgene$ENTREZID, OrgDb = org,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
cnet_go1 <- setReadable(go1, org, 'ENTREZID')
if (length(cnet_go1$ID) == 0) {
g2 <- NULL
} else{
g2 <- as.grob(cnetplot(cnet_go1, foldChange=geneList_up,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
go2 <- enrichGO(downgene$ENTREZID, OrgDb = org,
pvalueCutoff = 0.05, minGSSize = 50, maxGSSize = 500)
cnet_go2 <- setReadable(go2, org, 'ENTREZID')
if (length(cnet_go2$ID) == 0) {
g3 <- NULL
} else{
g3 <- as.grob(cnetplot(cnet_go2, foldChange=geneList_down,
cex_label_gene = 0.5, cex_label_category = 0.75,
cex_category = 0.5, colorEdge = TRUE))
}
##GSEA plot
data <- na.omit(data)
geneList <- data$log2FoldChange
names(geneList) = as.character(data$ENTREZID)
geneList <- sort(geneList, decreasing = TRUE)
go3 <- gseGO(geneList = geneList, pvalueCutoff = 0.05,
OrgDb = org, exponent = 1, eps = 0,
pAdjustMethod = "none", minGSSize = 50,
maxGSSize = 500, by = "fgsea")
if (length(go3$ID) == 0) {
g4 <- NULL
} else{
g4 <- as.grob(gseaplot2(kk2, 1:6, pvalue_table = F))
gsego_name <- paste(paste(dir_name, "/", sep = ""),
"gseGO.txt", sep = "")
write.table(as.data.frame(kk2), file = gsego_name, row.names = F, col.names = T, sep = "\t", quote = F)
}
go_name <- paste(paste(dir_name, "/", sep = ""),
"GO.pdf", sep = "")
pdf(go_name, width = 14, height = 14.0)
print(plot_grid(g1, g4, g2, g3, nrow = 2))
dev.off()
#FC上位50下位50をboxplot
data4 <- data3[sort(data3$log2FoldChange, decreasing = T, index=T)$ix,]
up_all <- dplyr::filter(data4, log2FoldChange > 0)
up50 <- up_all[1:50,8:(7 + Cond_1 + Cond_2)]
collist <- gsub("\\_.+$", "", colnames(up50))
collist <- unique(collist[-1])
up50$Row.names <- up_all[1:50,]$Row.names
up50 <- up50 %>% gather(key=sample, value=value,-Row.names)
up50$sample <- gsub("\\_.+$", "", up50$sample)
up50$Row.names <- as.factor(up50$Row.names)
up50$sample <- factor(up50$sample,levels=collist,ordered=TRUE)
up50$value <- as.numeric(up50$value)
data4 <- data3[sort(data3$log2FoldChange, decreasing = F, index=T)$ix,]
down_all <- dplyr::filter(data4, log2FoldChange < 0)
down50 <- down_all[1:50,8:(7 + Cond_1 + Cond_2)]
down50$Row.names <- down_all[1:50,]$Row.names
down50 <- down50 %>% gather(key=sample, value=value,-Row.names)
down50$sample <- gsub("\\_.+$", "", down50$sample)
down50$Row.names <- as.factor(down50$Row.names)
down50$sample <- factor(down50$sample,levels=collist,ordered=TRUE)
down50$value <- as.numeric(down50$value)
data5 <- data4[,8:(7 + Cond_1 + Cond_2)]
rownames(data5) <- data4$Row.names
deg_name <- paste(paste(dir_name, "/", sep = ""),
"DEG_count.txt", sep = "")
write.table(data5, file = deg_name, row.names = T, col.names = T, sep = "\t", quote = F)
degtop_name <- paste(paste(dir_name, "/", sep = ""),
"top_DEG.pdf", sep = "")
pdf(degtop_name,height = 10, width = 10)
plot(ggpubr::ggboxplot(up50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)) +
scale_fill_manual(values=c("gray", "#ff8082")))
plot(ggpubr::ggboxplot(down50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)) +
scale_fill_manual(values=c("gray", "#ff8082")))
dev.off()
} else{
ma_name <- paste(paste(dir_name, "/", sep = ""),
"maplot.pdf", sep = "")
pdf(ma_name, width = 4.5, height = 3.5)
print(plot_grid(m1))
dev.off()
}
}
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
library(rnaseqviewer)
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
devtools::load_all(".")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
setwd("~/Desktop/デモデータ/acly")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
warnings()
setwd("~/Desktop/Rproject")
setwd("~/Desktop/gene_set_extraction")
Count_matrix ="ALL_TPM.txt"
Gene_set = "gene_set"
All_data <- read.table(Count_matrix, header = T, row.names = 1)
group_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
group_files <- list.files(path = Gene_set,
pattern = "*.txt")
group_dir <- gsub(group_files[1], "",group_files_full[1])
group_files_full <- gsub(".txt", "", group_files_full)
group_files
name ="KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM.txt"
data.file <- paste(name, ".txt", sep = "")
print(data.file)
group <- read.table(data.file, header = F,
row.names = 1, skip = 2)
group_files_full
name ="gene_set/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM"
data.file <- paste(name, ".txt", sep = "")
print(data.file)
group <- read.table(data.file, header = F,
row.names = 1, skip = 2)
group
Gene_set <- "gene_set/_convert"
group_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
group_files <- list.files(path = Gene_set,
pattern = "*.txt")
group_dir <- gsub(group_files[1], "",group_files_full[1])
group_files_full <- gsub(".txt", "", group_files_full)
group_files_full
name = "gene_set/_convert/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM"
data.file <- paste(name, ".txt", sep = "")
print(data.file)
group <- read.table(data.file, header = F,
row.names = 1, skip = 2)
head(group)
group <- rownames(group)
data <- merge(group, All_data, by = 0)
head(data)
Gene_set <- "gene_set/_convert"
group_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
group_files <- list.files(path = Gene_set,
pattern = "*.txt")
group_dir <- gsub(group_files[1], "",group_files_full[1])
group_files_full <- gsub(".txt", "", group_files_full)
group_files_full
name = "gene_set/_convert/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM"
data.file <- paste(name, ".txt", sep = "")
print(data.file)
group <- read.table(data.file, header = F,
row.names = 1, skip = 2)
head(group)
group <- rownames(group)
data <- merge(group, All_data, by = 0)
head(data)
group
setwd("~/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/common_change")
data <- read.csv("PS_QS_2FCdown.csv",header = T, row.names = 1)
data2 <- read.csv("PS_QS_2FCdown_ACLY_commonUp.csv", header = T, row.names = 1)
library(dplyr)  #filter
library(stringr)
library(ggvenn)
All <- row.names(data)
ACLY-dep <- row.names(data2)
ACLYdep <- row.names(data2)
ACLYindep <- setdiff(ALL, ACLYdep)
ACLYindep <- setdiff(All, ACLYdep)
View(data)
sink("list.txt")
All
ACLYdep
ACLYindep
sink()
data3 <- data.frame()
All <- data.frame(Row.names = row.names(data), Cluster = "All")
head(All)
ACLYdep <- data.frame(Row.names = row.names(data2), Cluster = "ACLYdep")
ACLYindep <- data.frame(Row.names = ACLYindep, Cluster = "ACLYindep")
data <- rbind(All, ACLYdep)
data <- rbind(data, ACLYindep)
head(data)
write.csv(data, file="ALL-down_ACLY-dep_indep.csv",sep = ",", quote = F, row.names = F)
write.csv(data, file="ALL-down_ACLY-dep_indep.csv", sep = ",", quote = F, row.names = F)
write.csv(data, file="ALL-down_ACLY-dep_indep.csv", sep = ",", quote = F, row.names = F)
write.table(data, file="ALL-down_ACLY-dep_indep.csv", sep = ",", quote = F, row.names = F)
my.symbols <- data
library(org.Hs.eg.db)
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
head(my.symbols)
gene_IDs <- AnnotationDbi::select(org, keys = my.symbols,
keytype = "Row.names",
columns = c("ENTREZID", "SYMBOL"))
colnames(my.symbols) <- c("GeneID", "Cluster")
head(my.symbols)
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
my.symbols <- as.character(my.symbols)
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
my.symbols <- read.csv("ALL-down_ACLY-dep_indep.csv",header = T)
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
my.symbols <- read.csv("ALL-up_ACLY-dep_indep.csv",header = T)
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
my.symbols <- read.csv("ALL-down_ACLY-dep_indep.csv",header = T)
my.symbols <- my.symbols$Row.names
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
colnames(gene_IDs) <- c("GeneID","ENTREZID")
head(data)
colnames(gene_IDs) <- c("Row.names","ENTREZID")
data2 <- merge(data, gene_IDs, by="GeneID")
data2 <- merge(data, gene_IDs, by="Row.names")
formula_res <- compareCluster(ENTREZID~Cluster, data = data2,
fun="enrichKEGG", organism="hsa")
library(clusterProfiler)
formula_res <- compareCluster(ENTREZID~Cluster, data = data2,
fun="enrichKEGG", organism="hsa")
p1 <- dotplot(formula_res, color ="qvalue", font.size = 7)
formula_res
p1
org="hsa"
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org)
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org.Hs.eg.db)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 7)
g1
p1
formula_res
data10 <- read.csv("PS_QS_2FCdown_ACLY_commonUp.csv",header = )
data10 <- read.csv("PS_QS_2FCdown_ACLY_commonUp.csv",header = T,row.names = 1)
data.z <- genescale(data10, axis = 1, method = "Z")
library(genefilter  )
library(ComplexHeatmap)
data.z <- genescale(data10, axis = 1, method = "Z")
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= km, cluster_row_slices = F, row_km_repeats = km_repeats,
show_row_names = F)
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht
head(data10)
data10 <- read.csv("PS_QS_2FCdown_ACLY_commonUp_normalizeSen.csv",header = T,row.names = 1)
data11 <- log2(data10)
head(data10)
ht <- Heatmap(data11, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht
head(data11)
data11 <- log2(data10+0.01)
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht
ht <- Heatmap(data10, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht
ht <- Heatmap(data10, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F, col = c("blue","red"))
ht
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F, col = c("blue","red"))
ht
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F, col = c("white","red"))
ht
library(RColorBrewer)
library(gplots)
heatmap.2(as.matrix(data11),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="none")
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F, col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),column_order = sort(colnames(data11)))
ht
pdf("heatmap_PS_QS_2FCdown_ACLY_commonUp_normalizeSen.pdf", height = 3.5, width = 3)
ht
dev.off()
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org.Hs.eg.db, pvalueCutoff=1)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 7)
g1
head(data2)
count <- read.csv("/Users/kanetoh/Desktop/デモデータ/PQS_ALL.csv",header = T,row.names = 1)
org = org.Hs.eg.db
#dotplot
universe <- AnnotationDbi::select(org,keys = rownames(count),
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL", "UNIPROT"))
data2 <- data2 %>% distinct(Row.names, .keep_all = T)
head(data2)
formula_res <- compareCluster(ENTREZID~Cluster, data=data2,
fun="enrichKEGG", organism="hsa",
universe = universe)
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9)
p1
formula_res <- compareCluster(ENTREZID~Cluster, data=data2,
fun="enrichKEGG", organism="hsa",
universe = universe, pvalueCutoff=1)
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9)
p1
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9,showCategory=3)
p1
formula_res <- compareCluster(ENTREZID~Cluster, data=data2,
fun="enrichGO", organism=org,
universe = universe, pvalueCutoff=1)
formula_res <- compareCluster(ENTREZID~Cluster, data=data2,
fun="enrichGO", OrgDb=org,
universe = universe, pvalueCutoff=1)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 7)
g1
pdf("dotplot_ALL-down_ACLY-dep_indep.pdf", height = 8, width = 5)
g1
dev.off()
pdf("dotplot_ALL-down_ACLY-dep_indep.pdf", height = 6, width = 5)
g1
dev.off()
pdf("dotplot_ALL-down_ACLY-dep_indep.pdf", height = 5, width = 5)
g1
dev.off()
devtools::install_github("/Kan-E/rnaseqviewer")
devtools::install_github("Kan-E/rnaseqviewer")
library(rnaseqviewer)
setwd("~/Desktop/kdm")
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_WTex_KOex_WTres_new.txt",EBseq_condmeans = "GeneMat_result_WTex_KOex_WTres_condmeans.txt",Species = "mouse",Cond_1 = 2,Cond_2 = 2,Cond_3 = 2,fdr = 0.05,fc = 1)
rlang::last_error()
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_WTex_KOex_WTres_new.txt",EBseq_condmeans = "GeneMat_result_WTex_KOex_WTres_condmeans.txt",Species = "mouse",Cond_1 = 2,Cond_2 = 2,Cond_3 = 2,fdr = 0.05,fc = 1.2)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1)
setwd("~/Downloads/RNA-seq analysis/20200518_RNA-seq_TPM_analysis_eto/PQS/EBseq_result")
multiDEG_overview(Normalized_count_matrix = "ALL_TPM.txt",EBseq_result = "GeneMat_result_new.txt",EBseq_condmeans = "GeneMat_result_condmeans.txt",Species = "human",fdr = 0.05,fc = 1)
multiDEG_overview(Normalized_count_matrix = "ALL_TPM.txt",EBseq_result = "GeneMat_result_new.txt",EBseq_condmeans = "GeneMat_result_condmeans.txt",Species = "human",fdr = 0.05,fc = 1)
setwd("~/Desktop/kdm")
data <- read.table("GeneMat_result_3_3_3_normalized_data_matrix.txt",header = T,row.names = 1)
colnames(data)<-c("WTex_1","WTex_2","WTex_3","KOex_1","KOex_2","KOex_3","WTres_1","WTres_2","WTres_3")
write.table(data, file = "GeneMat_result_3_3_3_normalized_data_matrix.txt",row.names = T, quote=F)
data <- read.table("GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",header = T,row.names = 1)
colnames(data)<-c("WTex_2","WTex_3","KOex_2","KOex_3","WTres_2","WTres_3")
write.table(data, file = "GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",row.names = T, quote=F)
write.table(data, file = "GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",row.names = T, quote=F, sep = "\t")
data <- read.table("GeneMat_result_3_3_3_normalized_data_matrix.txt",header = T,row.names = 1)
colnames(data)<-c("WTex_1","WTex_2","WTex_3","KOex_1","KOex_2","KOex_3","WTres_1","WTres_2","WTres_3")
write.table(data, file = "GeneMat_result_3_3_3_normalized_data_matrix.txt",row.names = T, quote=F, sep = "\t")
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_WTex_KOex_WTres_new.txt",EBseq_condmeans = "GeneMat_result_WTex_KOex_WTres_condmeans.txt",Species = "mouse",Cond_1 = 2,Cond_2 = 2,Cond_3 = 2,fdr = 0.05,fc = 1)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1,basemean = 10)
library(rnaseqviewer)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1,basemean = 10)
library(rnaseqviewer)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1,basemean = 10)
setwd("~/Downloads/RNA-seq analysis/20200518_RNA-seq_TPM_analysis_eto/PQS/EBseq_result")
multiDEG_overview(Normalized_count_matrix = "ALL_TPM.txt",EBseq_result = "GeneMat_result_new.txt",EBseq_condmeans = "GeneMat_result_condmeans.txt",Species = "human",fdr = 0.05,fc = 1)
sessionInfo()
