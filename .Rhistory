up50$Row.names <- up_all[1:50,]$Row.names
up50 <- up50 %>% gather(key=sample, value=value,-Row.names)
up50$sample <- gsub("\\_.+$", "", up50$sample)
up50$Row.names <- as.factor(up50$Row.names)
up50$sample <- factor(up50$sample,levels=collist,ordered=TRUE)
up50$value <- as.numeric(up50$value)
data4 <- data3[sort(data3$log2FoldChange, decreasing = F, index=T)$ix,]
down_all <- dplyr::filter(data4, log2FoldChange < 0)
down50 <- down_all[1:50,8:(7 + Cond_1 + Cond_2)]
down50$Row.names <- down_all[1:50,]$Row.names
down50 <- down50 %>% gather(key=sample, value=value,-Row.names)
down50$sample <- gsub("\\_.+$", "", down50$sample)
down50$Row.names <- as.factor(down50$Row.names)
down50$sample <- factor(down50$sample,levels=collist,ordered=TRUE)
down50$value <- as.numeric(down50$value)
data5 <- data4[,8:(7 + Cond_1 + Cond_2)]
rownames(data5) <- data4$Row.names
deg_name <- paste(paste(dir_name, "/", sep = ""),
"DEG_count.txt", sep = "")
write.table(data5, file = deg_name, row.names = T, col.names = T, sep = "\t", quote = F)
degtop_name <- paste(paste(dir_name, "/", sep = ""),
"top_DEG.pdf", sep = "")
pdf(degtop_name,height = 10, width = 10)
plot(ggpubr::ggboxplot(up50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)) +
scale_fill_manual(values=c("gray", "#ff8082")))
plot(ggpubr::ggboxplot(down50, x = "sample", y = "value",
fill = "sample", facet.by = "Row.names",
scales = "free", add = "jitter",
xlab = "gene", ylab = "TPM")+
ggplot2::theme(axis.text.x= ggplot2::element_text(size = 5),
axis.text.y= ggplot2::element_text(size = 10)) +
ggplot2::scale_y_continuous(limits = c(0, NA)) +
scale_fill_manual(values=c("gray", "#ff8082")))
dev.off()
} else{
ma_name <- paste(paste(dir_name, "/", sep = ""),
"maplot.pdf", sep = "")
pdf(ma_name, width = 4.5, height = 3.5)
print(plot_grid(m1))
dev.off()
}
}
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
library(rnaseqviewer)
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
devtools::load_all(".")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
setwd("~/Desktop/デモデータ/acly")
DEG_overview(Count_matrix = "GeneMat_TPM.txt",DEG_result = "GeneMat_result_new.txt",Type = "EBseq",Species = "human",fdr = 0.01,fc = 40)
warnings()
setwd("~/Desktop/Rproject")
setwd("~/Desktop/gene_set_extraction")
Count_matrix ="ALL_TPM.txt"
Gene_set = "gene_set"
All_data <- read.table(Count_matrix, header = T, row.names = 1)
group_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
group_files <- list.files(path = Gene_set,
pattern = "*.txt")
group_dir <- gsub(group_files[1], "",group_files_full[1])
group_files_full <- gsub(".txt", "", group_files_full)
group_files
name ="KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM.txt"
data.file <- paste(name, ".txt", sep = "")
print(data.file)
group <- read.table(data.file, header = F,
row.names = 1, skip = 2)
group_files_full
name ="gene_set/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM"
data.file <- paste(name, ".txt", sep = "")
print(data.file)
group <- read.table(data.file, header = F,
row.names = 1, skip = 2)
group
Gene_set <- "gene_set/_convert"
group_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
group_files <- list.files(path = Gene_set,
pattern = "*.txt")
group_dir <- gsub(group_files[1], "",group_files_full[1])
group_files_full <- gsub(".txt", "", group_files_full)
group_files_full
name = "gene_set/_convert/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM"
data.file <- paste(name, ".txt", sep = "")
print(data.file)
group <- read.table(data.file, header = F,
row.names = 1, skip = 2)
head(group)
group <- rownames(group)
data <- merge(group, All_data, by = 0)
head(data)
Gene_set <- "gene_set/_convert"
group_files_full <- list.files(path = Gene_set,
pattern = "*.txt", full.names = T)
group_files <- list.files(path = Gene_set,
pattern = "*.txt")
group_dir <- gsub(group_files[1], "",group_files_full[1])
group_files_full <- gsub(".txt", "", group_files_full)
group_files_full
name = "gene_set/_convert/KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM"
data.file <- paste(name, ".txt", sep = "")
print(data.file)
group <- read.table(data.file, header = F,
row.names = 1, skip = 2)
head(group)
group <- rownames(group)
data <- merge(group, All_data, by = 0)
head(data)
group
setwd("~/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/common_change")
data <- read.csv("PS_QS_2FCdown.csv",header = T, row.names = 1)
data2 <- read.csv("PS_QS_2FCdown_ACLY_commonUp.csv", header = T, row.names = 1)
library(dplyr)  #filter
library(stringr)
library(ggvenn)
All <- row.names(data)
ACLY-dep <- row.names(data2)
ACLYdep <- row.names(data2)
ACLYindep <- setdiff(ALL, ACLYdep)
ACLYindep <- setdiff(All, ACLYdep)
View(data)
sink("list.txt")
All
ACLYdep
ACLYindep
sink()
data3 <- data.frame()
All <- data.frame(Row.names = row.names(data), Cluster = "All")
head(All)
ACLYdep <- data.frame(Row.names = row.names(data2), Cluster = "ACLYdep")
ACLYindep <- data.frame(Row.names = ACLYindep, Cluster = "ACLYindep")
data <- rbind(All, ACLYdep)
data <- rbind(data, ACLYindep)
head(data)
write.csv(data, file="ALL-down_ACLY-dep_indep.csv",sep = ",", quote = F, row.names = F)
write.csv(data, file="ALL-down_ACLY-dep_indep.csv", sep = ",", quote = F, row.names = F)
write.csv(data, file="ALL-down_ACLY-dep_indep.csv", sep = ",", quote = F, row.names = F)
write.table(data, file="ALL-down_ACLY-dep_indep.csv", sep = ",", quote = F, row.names = F)
my.symbols <- data
library(org.Hs.eg.db)
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
head(my.symbols)
gene_IDs <- AnnotationDbi::select(org, keys = my.symbols,
keytype = "Row.names",
columns = c("ENTREZID", "SYMBOL"))
colnames(my.symbols) <- c("GeneID", "Cluster")
head(my.symbols)
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
my.symbols <- as.character(my.symbols)
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
my.symbols <- read.csv("ALL-down_ACLY-dep_indep.csv",header = T)
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
my.symbols <- read.csv("ALL-up_ACLY-dep_indep.csv",header = T)
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
my.symbols <- read.csv("ALL-down_ACLY-dep_indep.csv",header = T)
my.symbols <- my.symbols$Row.names
gene_IDs <- AnnotationDbi::select(org.Hs.eg.db, keys = my.symbols,
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL"))
colnames(gene_IDs) <- c("GeneID","ENTREZID")
head(data)
colnames(gene_IDs) <- c("Row.names","ENTREZID")
data2 <- merge(data, gene_IDs, by="GeneID")
data2 <- merge(data, gene_IDs, by="Row.names")
formula_res <- compareCluster(ENTREZID~Cluster, data = data2,
fun="enrichKEGG", organism="hsa")
library(clusterProfiler)
formula_res <- compareCluster(ENTREZID~Cluster, data = data2,
fun="enrichKEGG", organism="hsa")
p1 <- dotplot(formula_res, color ="qvalue", font.size = 7)
formula_res
p1
org="hsa"
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org)
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org.Hs.eg.db)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 7)
g1
p1
formula_res
data10 <- read.csv("PS_QS_2FCdown_ACLY_commonUp.csv",header = )
data10 <- read.csv("PS_QS_2FCdown_ACLY_commonUp.csv",header = T,row.names = 1)
data.z <- genescale(data10, axis = 1, method = "Z")
library(genefilter  )
library(ComplexHeatmap)
data.z <- genescale(data10, axis = 1, method = "Z")
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= km, cluster_row_slices = F, row_km_repeats = km_repeats,
show_row_names = F)
ht <- Heatmap(data.z, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht
head(data10)
data10 <- read.csv("PS_QS_2FCdown_ACLY_commonUp_normalizeSen.csv",header = T,row.names = 1)
data11 <- log2(data10)
head(data10)
ht <- Heatmap(data11, name = "z-score",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht
head(data11)
data11 <- log2(data10+0.01)
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht
ht <- Heatmap(data10, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F)
ht
ht <- Heatmap(data10, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F, col = c("blue","red"))
ht
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F, col = c("blue","red"))
ht
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F, col = c("white","red"))
ht
library(RColorBrewer)
library(gplots)
heatmap.2(as.matrix(data11),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="none")
ht <- Heatmap(data11, name = "Log2FC",
clustering_method_columns = 'ward.D2',
row_km= 1, cluster_row_slices = F,
show_row_names = F, col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),column_order = sort(colnames(data11)))
ht
pdf("heatmap_PS_QS_2FCdown_ACLY_commonUp_normalizeSen.pdf", height = 3.5, width = 3)
ht
dev.off()
formula_res_go <- compareCluster(ENTREZID~Cluster,
data=data2, fun="enrichGO", OrgDb=org.Hs.eg.db, pvalueCutoff=1)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 7)
g1
head(data2)
count <- read.csv("/Users/kanetoh/Desktop/デモデータ/PQS_ALL.csv",header = T,row.names = 1)
org = org.Hs.eg.db
#dotplot
universe <- AnnotationDbi::select(org,keys = rownames(count),
keytype = "SYMBOL",
columns = c("ENTREZID", "SYMBOL", "UNIPROT"))
data2 <- data2 %>% distinct(Row.names, .keep_all = T)
head(data2)
formula_res <- compareCluster(ENTREZID~Cluster, data=data2,
fun="enrichKEGG", organism="hsa",
universe = universe)
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9)
p1
formula_res <- compareCluster(ENTREZID~Cluster, data=data2,
fun="enrichKEGG", organism="hsa",
universe = universe, pvalueCutoff=1)
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9)
p1
p1 <- dotplot(formula_res, color ="qvalue", font.size = 9,showCategory=3)
p1
formula_res <- compareCluster(ENTREZID~Cluster, data=data2,
fun="enrichGO", organism=org,
universe = universe, pvalueCutoff=1)
formula_res <- compareCluster(ENTREZID~Cluster, data=data2,
fun="enrichGO", OrgDb=org,
universe = universe, pvalueCutoff=1)
g1 <- dotplot(formula_res_go, color ="qvalue", font.size = 7)
g1
pdf("dotplot_ALL-down_ACLY-dep_indep.pdf", height = 8, width = 5)
g1
dev.off()
pdf("dotplot_ALL-down_ACLY-dep_indep.pdf", height = 6, width = 5)
g1
dev.off()
pdf("dotplot_ALL-down_ACLY-dep_indep.pdf", height = 5, width = 5)
g1
dev.off()
devtools::install_github("/Kan-E/rnaseqviewer")
devtools::install_github("Kan-E/rnaseqviewer")
library(rnaseqviewer)
setwd("~/Desktop/kdm")
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_WTex_KOex_WTres_new.txt",EBseq_condmeans = "GeneMat_result_WTex_KOex_WTres_condmeans.txt",Species = "mouse",Cond_1 = 2,Cond_2 = 2,Cond_3 = 2,fdr = 0.05,fc = 1)
rlang::last_error()
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_WTex_KOex_WTres_new.txt",EBseq_condmeans = "GeneMat_result_WTex_KOex_WTres_condmeans.txt",Species = "mouse",Cond_1 = 2,Cond_2 = 2,Cond_3 = 2,fdr = 0.05,fc = 1.2)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1)
setwd("~/Downloads/RNA-seq analysis/20200518_RNA-seq_TPM_analysis_eto/PQS/EBseq_result")
multiDEG_overview(Normalized_count_matrix = "ALL_TPM.txt",EBseq_result = "GeneMat_result_new.txt",EBseq_condmeans = "GeneMat_result_condmeans.txt",Species = "human",fdr = 0.05,fc = 1)
multiDEG_overview(Normalized_count_matrix = "ALL_TPM.txt",EBseq_result = "GeneMat_result_new.txt",EBseq_condmeans = "GeneMat_result_condmeans.txt",Species = "human",fdr = 0.05,fc = 1)
setwd("~/Desktop/kdm")
data <- read.table("GeneMat_result_3_3_3_normalized_data_matrix.txt",header = T,row.names = 1)
colnames(data)<-c("WTex_1","WTex_2","WTex_3","KOex_1","KOex_2","KOex_3","WTres_1","WTres_2","WTres_3")
write.table(data, file = "GeneMat_result_3_3_3_normalized_data_matrix.txt",row.names = T, quote=F)
data <- read.table("GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",header = T,row.names = 1)
colnames(data)<-c("WTex_2","WTex_3","KOex_2","KOex_3","WTres_2","WTres_3")
write.table(data, file = "GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",row.names = T, quote=F)
write.table(data, file = "GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",row.names = T, quote=F, sep = "\t")
data <- read.table("GeneMat_result_3_3_3_normalized_data_matrix.txt",header = T,row.names = 1)
colnames(data)<-c("WTex_1","WTex_2","WTex_3","KOex_1","KOex_2","KOex_3","WTres_1","WTres_2","WTres_3")
write.table(data, file = "GeneMat_result_3_3_3_normalized_data_matrix.txt",row.names = T, quote=F, sep = "\t")
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_WTex_KOex_WTres_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_WTex_KOex_WTres_new.txt",EBseq_condmeans = "GeneMat_result_WTex_KOex_WTres_condmeans.txt",Species = "mouse",Cond_1 = 2,Cond_2 = 2,Cond_3 = 2,fdr = 0.05,fc = 1)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1,basemean = 10)
library(rnaseqviewer)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1,basemean = 10)
library(rnaseqviewer)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1,basemean = 10)
setwd("~/Downloads/RNA-seq analysis/20200518_RNA-seq_TPM_analysis_eto/PQS/EBseq_result")
multiDEG_overview(Normalized_count_matrix = "ALL_TPM.txt",EBseq_result = "GeneMat_result_new.txt",EBseq_condmeans = "GeneMat_result_condmeans.txt",Species = "human",fdr = 0.05,fc = 1)
sessionInfo()
devtools::install_github("Kan-E/rnaseqviewer")
library(rnaseqviewer)
setwd("~/Desktop/kdm")
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1,basemean = 10)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1.5,basemean = 10)
warnings()
setwd("~/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All")
data<- read.csv("GeneMat_TPM_Qui.csv",header = T,row.names = 1)
colnames(data)<-c("Pro_1","Pro_2","Pro_3","Qui_1","Qui_2","Qui_3","Sen_1","Sen_2","Sen_3","Sen-siACLYst1_1","Sen-siACLYst1_2","Sen-siACLYst1_3","Sen-siACLYst2_1","Sen-siACLYst2_2","Sen-siACLYst2_3")
head(data)
write.table(data, file = "GeneMat_TPM_Qui.txt", sep = "\t", quote = F, row.names = T)
Omics_overview("GeneMat_TPM_Qui.txt")
T
Omics_overview
PCA <- function (Count_matrix) {
data <- read.table(Count_matrix, header = T, row.names = 1)
pca <- prcomp(data, scale. = T)
label <- colnames(data)
label <- gsub("\\_.+$", "", label)
lab_x <- paste(summary(pca)$importance[2, 1] * 100, "% of variance)",
sep = "")
lab_x <- paste("PC1 (", lab_x, sep = "")
lab_y <- paste(summary(pca)$importance[2, 2] * 100, "% of variance)",
sep = "")
lab_y <- paste("PC2 (", lab_y, sep = "")
pca$rotation <- as.data.frame(pca$rotation)
g1 <- ggplot(pca$rotation, aes(x = pca$rotation[, 1], y = pca$rotation[,
2], col = label, label = label)) + geom_point() + theme(panel.background = element_rect(fill = NA,
color = NA), panel.border = element_rect(fill = NA, size = 0.5)) +
xlab(lab_x) + ylab(lab_y) + geom_text_repel() + theme(legend.position = "none")
pca_name <- gsub("\\..+$", "", Count_matrix)
pca_name <- paste(pca_name, "_pca.pdf", sep = "")
pdf(pca_name, height = 2, width = 2.36)
print(g1)
dev.off()
}
PCA(Count_matrix = "GeneMat_TPM_Qui.txt")
library(ggplot)
library(ggplot2)
library(dplyr)
PCA(Count_matrix = "GeneMat_TPM_Qui.txt")
library(ggrepel)
PCA(Count_matrix = "GeneMat_TPM_Qui.txt")
setwd("~/Desktop/kdm")
Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt"
EBseq_result = "GeneMat_result_3_3_3_new.txt",
EBseq_result = "GeneMat_result_3_3_3_new.txt"
EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt"
Species = "mouse"
fdr = 0.05
fc = 1
basemean = 10
Cond_1 = 3
Cond_2 = 3
Cond_3 = 3
data <-read.table(Normalized_count_matrix,header = T)
collist <- gsub("\\_.+$", "", colnames(data))
collist <- unique(collist[-1])
result_Condm <- read.table(EBseq_condmeans, header = T, row.names = 1)
result_FDR <- read.table(EBseq_result,header = T, row.names = 1)
dir_name <- gsub(".txt", "", Normalized_count_matrix)
dir_name <- paste0(dir_name, paste0("_fc", fc))
dir_name <- paste0(dir_name, paste0("_fdr", fdr))
dir_name <- paste0(dir_name, paste0("_basemean", basemean))
dir.create(dir_name, showWarnings = F)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
library(org.Hs.eg.db)
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
library(org.Mm.eg.db)
switch (Species,
"mouse" = org_code <- "mmu",
"human" = org_code <- "hsa")
switch (Species,
"mouse" = org <- org.Mm.eg.db,
"human" = org <- org.Hs.eg.db)
plot_list = list()
dotplot_list = list()
htplot_list = list()
boxplot_list = list()
data4_sum = data.frame()
i=1
if(i == 1) {specific = collist[1]
FC_xlab <- paste0(paste0(paste0("Log2(", collist[1]) ,"/"), paste0(collist[2], ")"))
FC_ylab <- paste0(paste0(paste0("Log2(", collist[1]) ,"/"), paste0(collist[3], ")"))
result_Condm$FC_x <- log2((result_Condm$C1 + 0.01)/(result_Condm$C2 + 0.01))
result_Condm$FC_y <- log2((result_Condm$C1 + 0.01)/(result_Condm$C3 + 0.01))
}
if(i == 2) {specific = collist[2]
FC_xlab <- paste0(paste0(paste0("Log2(", collist[2]) ,"/"), paste0(collist[1], ")"))
FC_ylab <- paste0(paste0(paste0("Log2(", collist[2]) ,"/"), paste0(collist[3], ")"))
result_Condm$FC_x <- log2((result_Condm$C2 + 0.01)/(result_Condm$C1 + 0.01))
result_Condm$FC_y <- log2((result_Condm$C2 + 0.01)/(result_Condm$C3 + 0.01))
}
if(i == 3) {specific = collist[3]
FC_xlab <- paste0(paste0(paste0("Log2(", collist[3]) ,"/"), paste0(collist[1], ")"))
FC_ylab <- paste0(paste0(paste0("Log2(", collist[3]) ,"/"), paste0(collist[2], ")"))
result_Condm$FC_x <- log2((result_Condm$C3 + 0.01)/(result_Condm$C1 + 0.01))
result_Condm$FC_y <- log2((result_Condm$C3 + 0.01)/(result_Condm$C2 + 0.01))
}
result_FDR$FDR <- 1 - result_FDR$PPDE
result <- merge(result_Condm, result_FDR, by=0)
data$Row.names <- rownames(data)
data2 <- merge(data, result, by="Row.names")
result <- dplyr::filter(data2, apply(data2[,2:(Cond_1 + Cond_2 + Cond_3)],1,mean) > basemean)
head(result)
if(i == 1) {specific = collist[1]
FC_xlab <- paste0(paste0(paste0("Log2(", collist[1]) ,"/"), paste0(collist[2], ")"))
FC_ylab <- paste0(paste0(paste0("Log2(", collist[1]) ,"/"), paste0(collist[3], ")"))
result_Condm$FC_x <- log2((result_Condm$C1 + 0.01)/(result_Condm$C2 + 0.01))
result_Condm$FC_y <- log2((result_Condm$C1 + 0.01)/(result_Condm$C3 + 0.01))
Pattern1 <- "Pattern4"
Pattern2 <- "Pattern5"
}
if(i == 2) {specific = collist[2]
FC_xlab <- paste0(paste0(paste0("Log2(", collist[2]) ,"/"), paste0(collist[1], ")"))
FC_ylab <- paste0(paste0(paste0("Log2(", collist[2]) ,"/"), paste0(collist[3], ")"))
result_Condm$FC_x <- log2((result_Condm$C2 + 0.01)/(result_Condm$C1 + 0.01))
result_Condm$FC_y <- log2((result_Condm$C2 + 0.01)/(result_Condm$C3 + 0.01))
Pattern1 <- "Pattern3"
Pattern2 <- "Pattern5"
}
if(i == 3) {specific = collist[3]
FC_xlab <- paste0(paste0(paste0("Log2(", collist[3]) ,"/"), paste0(collist[1], ")"))
FC_ylab <- paste0(paste0(paste0("Log2(", collist[3]) ,"/"), paste0(collist[2], ")"))
result_Condm$FC_x <- log2((result_Condm$C3 + 0.01)/(result_Condm$C1 + 0.01))
result_Condm$FC_y <- log2((result_Condm$C3 + 0.01)/(result_Condm$C2 + 0.01))
Pattern1 <- "Pattern2"
Pattern2 <- "Pattern5"
}
result_FDR$FDR <- 1 - result_FDR$PPDE
result <- merge(result_Condm, result_FDR, by=0)
data$Row.names <- rownames(data)
data2 <- merge(data, result, by="Row.names")
result <- dplyr::filter(data2, apply(data2[,2:(Cond_1 + Cond_2 + Cond_3)],1,mean) > basemean)
sig <- rep(3, nrow(result))
sig[which(result$FDR <= fdr & result$FC_x < log2(1/fc) & result$FC_y < log2(1/fc))] = 2
sig[which(result$FDR <= fdr & result$FC_x > log2(fc) & result$FC_y > log2(fc))] = 1
data3 <- data.frame(Row.names = result$Row.names, FC_x = result$FC_x,
FC_y = result$FC_y, padj = result$FDR, sig = sig, FC_xy = result$FC_x * result$FC_y)
head(data3)
head(result)
result <- dplyr::filter(data2, apply(data2[,2:(Cond_1 + Cond_2 + Cond_3)],1,mean) > basemean)
sig <- rep(3, nrow(result))
sig[which(result$FDR <= fdr & result$FC_x < log2(1/fc) & result$FC_y < log2(1/fc) & (result$MAP = Pattern1 || result$MAP = Pattern2))] = 2
sig[which(result$FDR <= fdr & result$FC_x < log2(1/fc) & result$FC_y < log2(1/fc) & (result$MAP == Pattern1 || result$MAP == Pattern2))] = 2
sig[which(result$FDR <= fdr & result$FC_x > log2(fc) & result$FC_y > log2(fc) & (result$MAP = Pattern1 || result$MAP = Pattern2))] = 1
sig[which(result$FDR <= fdr & result$FC_x > log2(fc) & result$FC_y > log2(fc) & (result$MAP == Pattern1 || result$MAP == Pattern2))] = 1
data3 <- data.frame(Row.names = result$Row.names, FC_x = result$FC_x,
FC_y = result$FC_y, padj = result$FDR, sig = sig, FC_xy = result$FC_x * result$FC_y)
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
devtools::load_all("~/Desktop/Rproject/rnaseqviewer")
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1,basemean = 10)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1,basemean = 10)
library(rnaseqviewer)
multiDEG_overview(Normalized_count_matrix = "GeneMat_result_3_3_3_normalized_data_matrix.txt",EBseq_result = "GeneMat_result_3_3_3_new.txt",EBseq_condmeans = "GeneMat_result_3_3_3_condmeans.txt",Species = "mouse",fdr = 0.05,fc = 1,basemean = 10)
